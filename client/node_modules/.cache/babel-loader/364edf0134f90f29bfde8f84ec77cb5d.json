{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/tazwizinc/client/src/context/ProductContext.js\";\nimport React, { useState, createContext } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from \"uuid\";\nexport const ProductContext = createContext();\nexport const ProductProvider = props => {\n  const [product, setProduct] = useState([{\n    id: uuid(),\n    name: 'Water',\n    price: 7,\n    description: \"water descrip\"\n  }, {\n    id: uuid(),\n    name: 'Milk',\n    price: 17,\n    description: \"milk descrip\"\n  }, {\n    id: uuid(),\n    name: 'Soap',\n    price: 6,\n    description: \"soap descrip\"\n  }, {\n    id: uuid(),\n    name: 'Rice',\n    price: 3,\n    description: \"rice descrip\"\n  }]);\n  const [loading, setLoading] = useState(false); //fetch products infromation from the database\n\n  const getProducts = () => {\n    axios.get('http://localhost:3080/products').then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }; //add product info into the database\n\n\n  getProducts; //update product\n\n  return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n    value: [product, setProduct],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }\n  }, props.children);\n};\nexport default ProductProvider;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/context/ProductContext.js"],"names":["React","useState","createContext","axios","v4","uuid","ProductContext","ProductProvider","props","product","setProduct","id","name","price","description","loading","setLoading","getProducts","get","then","res","console","log","catch","err","error","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;AAEA,OAAO,MAAMC,cAAc,GAAGJ,aAAa,EAApC;AACP,OAAO,MAAMK,eAAe,GAAGC,KAAK,IAAI;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAClC,CACI;AAACU,IAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaO,IAAAA,IAAI,EAAE,OAAnB;AAA4BC,IAAAA,KAAK,EAAE,CAAnC;AAAsCC,IAAAA,WAAW,EAAE;AAAnD,GADJ,EAEI;AAACH,IAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaO,IAAAA,IAAI,EAAE,MAAnB;AAA2BC,IAAAA,KAAK,EAAE,EAAlC;AAAsCC,IAAAA,WAAW,EAAE;AAAnD,GAFJ,EAGI;AAACH,IAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaO,IAAAA,IAAI,EAAE,MAAnB;AAA2BC,IAAAA,KAAK,EAAE,CAAlC;AAAqCC,IAAAA,WAAW,EAAE;AAAlD,GAHJ,EAII;AAACH,IAAAA,EAAE,EAAEN,IAAI,EAAT;AAAaO,IAAAA,IAAI,EAAE,MAAnB;AAA2BC,IAAAA,KAAK,EAAE,CAAlC;AAAqCC,IAAAA,WAAW,EAAE;AAAlD,GAJJ,CADkC,CAAtC;AAQG,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC,CATkC,CAUpC;;AACD,QAAMgB,WAAW,GAAG,MAAM;AACrBd,IAAAA,KAAK,CAACe,GAAN,CAAU,gCAAV,EACMC,IADN,CACWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACF,KAHN,EAGQG,KAHR,CAGcC,GAAG,IAAG;AAAEH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AAChB,KAJN;AAKH,GANF,CAXqC,CAkBpC;;;AACAP,EAAAA,WAAW,CAnByB,CAoBpC;;AACD,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE,CAACR,OAAD,EAASC,UAAT,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACkB,QADX,CADJ;AAKF,CA1BM;AA2BN,eAAgBnB,eAAhB","sourcesContent":["import React, {useState, createContext} from 'react'\nimport axios from 'axios'\nimport {v4 as uuid} from \"uuid\"; \n\nexport const ProductContext = createContext();\nexport const ProductProvider = props => {\n   const [product, setProduct] = useState(\n       [\n           {id: uuid(), name: 'Water', price: 7, description: \"water descrip\"},\n           {id: uuid(), name: 'Milk', price: 17, description: \"milk descrip\"},\n           {id: uuid(), name: 'Soap', price: 6, description: \"soap descrip\"},\n           {id: uuid(), name: 'Rice', price: 3, description: \"rice descrip\"},\n       \n      ]);\n      const [loading, setLoading] = useState(false);\n    //fetch products infromation from the database\n   const getProducts = () => {\n        axios.get('http://localhost:3080/products')\n             .then(res => {\n                console.log(res)\n             }).catch(err =>{ console.error(err);\n             })\n    }\n    //add product info into the database\n    getProducts\n    //update product\n   return (\n       <ProductContext.Provider value={[product,setProduct]}>\n           {props.children}\n        </ProductContext.Provider>  \n   )\n}\n export default  ProductProvider;\n"]},"metadata":{},"sourceType":"module"}