{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js\";\nimport React, { useState, useContext } from 'react';\nimport { CustomerContext } from '../context/CustomerContext';\nimport { Container, Button, Table } from 'react-bootstrap';\n\nconst Customers = () => {\n  const [approved, setApproved] = useState('');\n  const [customer, setCustomer] = useContext(CustomerContext);\n\n  const updateCustomer = id => {\n    console.log(id); // axios.patch('')\n    //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n    //      .catch(err => console.log(err))\n  }; //when the check box is toggled\n\n\n  const handleCheckboxChange = docid => {\n    console.log(customer);\n    customer.forEach(element => {\n      console.log(element.name);\n      element.map(({\n        id,\n        name,\n        email,\n        address,\n        approved\n      }) => {\n        if (id == docid) {\n          console.log(email);\n        }\n      });\n    }); //setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n\n    setCustomer(PrevCustomer => [customer[0].approved = !approved]); //setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"p-0\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    Table: true,\n    striped: true,\n    hover: true,\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }\n  }, customer.map(({\n    id,\n    name,\n    email,\n    address,\n    approved\n  }) => /*#__PURE__*/React.createElement(\"tbody\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, address), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }, approved), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: approved,\n    onChange: handleCheckboxChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nexport default Customers;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js"],"names":["React","useState","useContext","CustomerContext","Container","Button","Table","Customers","approved","setApproved","customer","setCustomer","updateCustomer","id","console","log","handleCheckboxChange","docid","forEach","element","name","map","email","address","PrevCustomer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,SAAQC,SAAR,EAAkBC,MAAlB,EAA0BC,KAA1B,QAAsC,iBAAtC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BT,UAAU,CAACC,eAAD,CAA1C;;AAEA,QAAMS,cAAc,GAAIC,EAAD,IAAQ;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAD2B,CAE1B;AACA;AACA;AAEH,GANF,CAJoB,CAYnB;;;AACD,QAAMG,oBAAoB,GAAIC,KAAD,IAAU;AACnCH,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAA,IAAAA,QAAQ,CAACQ,OAAT,CAAiBC,OAAO,IAAI;AACxBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACC,IAApB;AACAD,MAAAA,OAAO,CAACE,GAAR,CAAY,CAAC;AAACR,QAAAA,EAAD;AAAKO,QAAAA,IAAL;AAAWE,QAAAA,KAAX;AAAkBC,QAAAA,OAAlB;AAA2Bf,QAAAA;AAA3B,OAAD,KAAyC;AACjD,YAAGK,EAAE,IAAII,KAAT,EAAe;AACXH,UAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AACJ,OAJD;AAMH,KARD,EAFmC,CAWnC;;AACAX,IAAAA,WAAW,CAACa,YAAY,IAAI,CAAEd,QAAQ,CAAC,CAAD,CAAR,CAAYF,QAAZ,GAAuB,CAACA,QAA1B,CAAjB,CAAX,CAZmC,CAanC;AAEF,GAfF;;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAA2B,IAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,OAAO,MAApB;AAAqB,IAAA,KAAK,MAA1B;AAA2B,IAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIE,QAAQ,CAACW,GAAT,CAAa,CAAC;AAACR,IAAAA,EAAD;AAAKO,IAAAA,IAAL;AAAWE,IAAAA,KAAX;AAAkBC,IAAAA,OAAlB;AAA2Bf,IAAAA;AAA3B,GAAD,kBACV;AAAO,IAAA,GAAG,EAAEK,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKO,IAFL,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,KADL,CALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OADL,CARJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,QADL,CAXJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAwB,IAAA,OAAO,EAAEA,QAAjC;AAA2C,IAAA,QAAQ,EAAEQ,oBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,CADJ,CADH,CADJ,CADL,CADJ,CADJ;AA+BH,CA5DD;;AA8DA,eAAeT,SAAf","sourcesContent":["import React, {useState,useContext } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Button, Table} from 'react-bootstrap'\n\nconst Customers = () => {\n    const [approved, setApproved] = useState('');\n    const [customer, setCustomer] = useContext(CustomerContext)\n\n    const updateCustomer = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         \n     }\n     \n     //when the check box is toggled\n    const handleCheckboxChange = (docid) =>{\n        console.log(customer)\n        customer.forEach(element => {\n            console.log(element.name)\n            element.map(({id, name, email, address, approved}) =>{\n                if(id == docid){\n                    console.log(email);\n                }\n            })\n           \n        });\n        //setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n        setCustomer(PrevCustomer => [ customer[0].approved = !approved])\n        //setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n        \n     }\n    return (\n        <div>\n            <Container className=\"p-0\" fluid>\n                 <Table Table striped hover className=\"mb-0\">\n                    {customer.map(({id, name, email, address, approved}) => (\n                        <tbody key={id}>\n                            <tr> \n                                <td>\n                                \n                                    {name}\n                                </td>\n                                <td>\n                                    {email}\n                                </td>\n                                <td>\n                                    {address}\n                                </td>\n                                <td>\n                                    {approved}\n                                </td>\n                                <td>\n                                    <input type=\"checkbox\"  checked={approved} onChange={handleCheckboxChange} />\n                                \n                                </td>\n                            </tr>\n                        </tbody>                                \n                    ))}\n                  </Table>\n            </Container>\n        </div>\n    )\n}\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}