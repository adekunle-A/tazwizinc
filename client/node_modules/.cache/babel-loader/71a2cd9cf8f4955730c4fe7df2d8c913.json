{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/tazwizinc/client/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(Component, Object.assign({}, rest, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 16\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default ProtectedRoute; // import React, {useContext,useEffect} from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import {UserContext} from '../context/UsersContext'\n// //Protected route\n// const  ProtectedRoute = ({component:Component, ...rest})  => {\n//     const token = localStorage.getItem('authToken')\n//     const [isLoggedIn, setIsLoggedIn] = useContext(UserContext)\n//     useEffect(() => {\n//         if(token != null ){\n//             setIsLoggedIn(true)\n//         }\n//     });\n//     return (\n//        <Route {...rest} render={(props) => localStorage.getItem('authToken') ? (\n//               <Component {...props}/>\n//        ) :\n//               <Redirect to=\"/\"/>\n//         //    }else{\n//         //     console.log(props)\n//         //         return <Redirect to=\"/\"/>\n//         //    }\n//         }\n//        />\n//     )\n// }\n// export default ProtectedRoute","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/ProtectedRoute.js"],"names":["React","Route","ProtectedRoute","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC5D,sBACE,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EACrBC,KAAK,iBAAI,oBAAC,SAAD,oBAAeD,IAAf,EAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAKD,CAND;;AAQA,eAAeJ,cAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route {...rest} render={\n      props => <Component {...rest} {...props} />\n    } />\n  )\n}\n\nexport default ProtectedRoute;\n// import React, {useContext,useEffect} from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import {UserContext} from '../context/UsersContext'\n// //Protected route\n// const  ProtectedRoute = ({component:Component, ...rest})  => {\n//     const token = localStorage.getItem('authToken')\n//     const [isLoggedIn, setIsLoggedIn] = useContext(UserContext)\n//     useEffect(() => {\n//         if(token != null ){\n//             setIsLoggedIn(true)\n//         }\n//     });\n//     return (\n//        <Route {...rest} render={(props) => localStorage.getItem('authToken') ? (\n    \n//               <Component {...props}/>\n//        ) :\n//               <Redirect to=\"/\"/>\n//         //    }else{\n//         //     console.log(props)\n//         //         return <Redirect to=\"/\"/>\n//         //    }\n//         }\n//        />\n//     )\n// }\n\n// export default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}