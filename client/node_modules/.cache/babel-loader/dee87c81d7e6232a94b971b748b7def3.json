{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js\";\nimport React, { useState, useContext } from 'react';\nimport { CustomerContext } from '../context/CustomerContext';\nimport { Container, Button, Table } from 'react-bootstrap';\n\nconst Customers = () => {\n  const [approved, setApproved] = useState('');\n  const [customer, setCustomer] = useContext(CustomerContext);\n\n  const updateCustomer = id => {\n    console.log(id); // axios.patch('')\n    //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n    //      .catch(err => console.log(err))\n  };\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]); //when the check box is toggled\n\n  const approve = id => {\n    setCustomer(PrevProduct => [...PrevProduct.filter(product => product.id !== id)]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"p-0\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    Table: true,\n    striped: true,\n    hover: true,\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }, customer.map(({\n    id,\n    name,\n    email,\n    address,\n    approved\n  }) => /*#__PURE__*/React.createElement(\"tbody\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, address), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, approved), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: approve(id),\n    onClick: () => approve(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nexport default Customers;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js"],"names":["React","useState","useContext","CustomerContext","Container","Button","Table","Customers","approved","setApproved","customer","setCustomer","updateCustomer","id","console","log","useEffect","effect","cleanup","input","approve","PrevProduct","filter","product","map","name","email","address"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,SAAQC,SAAR,EAAkBC,MAAlB,EAA0BC,KAA1B,QAAsC,iBAAtC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BT,UAAU,CAACC,eAAD,CAA1C;;AAEA,QAAMS,cAAc,GAAIC,EAAD,IAAQ;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAD2B,CAE1B;AACA;AACA;AAEH,GANF;;AAOCG,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM;AACN,WAAO,MAAM;AACTC,MAAAA,OAAO;AACV,KAFD;AAGH,GALQ,EAKN,CAACC,KAAD,CALM,CAAT,CAXmB,CAiBnB;;AACD,QAAMC,OAAO,GAAIP,EAAD,IAAO;AACnBF,IAAAA,WAAW,CAACU,WAAW,IAAI,CAAC,GAAGA,WAAW,CAACC,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACV,EAAR,KAAeA,EAA7C,CAAJ,CAAhB,CAAX;AAEF,GAHF;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAA2B,IAAA,KAAK,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,OAAO,MAApB;AAAqB,IAAA,KAAK,MAA1B;AAA2B,IAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,QAAQ,CAACc,GAAT,CAAa,CAAC;AAACX,IAAAA,EAAD;AAAKY,IAAAA,IAAL;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,OAAlB;AAA2BnB,IAAAA;AAA3B,GAAD,kBACV;AAAO,IAAA,GAAG,EAAEK,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKY,IAFL,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KADL,CALJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OADL,CARJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,QADL,CAXJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAEY,OAAO,CAACP,EAAD,CAAxC;AAA8C,IAAA,OAAO,EAAE,MAAMO,OAAO,CAACP,EAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,CADJ,CADH,CADJ,CADL,CADJ,CADJ;AA+BH,CArDD;;AAuDA,eAAeN,SAAf","sourcesContent":["import React, {useState,useContext } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Button, Table} from 'react-bootstrap'\n\nconst Customers = () => {\n    const [approved, setApproved] = useState('');\n    const [customer, setCustomer] = useContext(CustomerContext)\n\n    const updateCustomer = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         \n     }\n     useEffect(() => {\n         effect\n         return () => {\n             cleanup\n         }\n     }, [input])\n     //when the check box is toggled\n    const approve = (id) =>{\n        setCustomer(PrevProduct => [...PrevProduct.filter(product => product.id !== id)]);\n        \n     }\n    return (\n        <div>\n            <Container className=\"p-0\" fluid>\n                 <Table Table striped hover className=\"mb-0\">\n                    {customer.map(({id, name, email, address, approved}) => (\n                        <tbody key={id}>\n                            <tr> \n                                <td>\n                                \n                                    {name}\n                                </td>\n                                <td>\n                                    {email}\n                                </td>\n                                <td>\n                                    {address}\n                                </td>\n                                <td>\n                                    {approved}\n                                </td>\n                                <td>\n                                    <input type=\"checkbox\" onChange={approve(id)} onClick={() => approve(id)} />\n                                \n                                </td>\n                            </tr>\n                        </tbody>                                \n                    ))}\n                  </Table>\n            </Container>\n        </div>\n    )\n}\n\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}