{"ast":null,"code":"import _slicedToArray from\"/Users/akinyemi/Desktop/tazwizinc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from'react';import{CustomerContext}from'../context/CustomerContext';import{Container,Table}from'react-bootstrap';var Customers=function Customers(){var _useContext=useContext(CustomerContext),_useContext2=_slicedToArray(_useContext,2),customer=_useContext2[0],setCustomer=_useContext2[1];var updateCustomer=function updateCustomer(id){console.log(id);// axios.patch('')\n//      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n//      .catch(err => console.log(err))\n};//when the check box is toggled\nvar handleCheckboxChange=function handleCheckboxChange(docid){customer.forEach(function(element){if(element.id===docid){console.log(element.approved);console.log([customer]);}});//setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n//setCustomer(PrevCustomer => [ customer[0].approved = !approved])\n//setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n};return/*#__PURE__*/React.createElement(Container,{className:\"container\",id:\"dataDiv\",fluid:true},/*#__PURE__*/React.createElement(Table,{Table:true,striped:true,hover:true,className:\"mb-0\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"UUID\"),/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Email\"),/*#__PURE__*/React.createElement(\"th\",null,\"Address\"),/*#__PURE__*/React.createElement(\"th\",null,\"Approved\")),customer.map(function(_ref){var _id=_ref._id,name=_ref.name,email=_ref.email,address=_ref.address,approved=_ref.approved;return/*#__PURE__*/React.createElement(\"tbody\",{key:_id},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,_id),/*#__PURE__*/React.createElement(\"td\",null,name),/*#__PURE__*/React.createElement(\"td\",null,email),/*#__PURE__*/React.createElement(\"td\",null,address),/*#__PURE__*/React.createElement(\"td\",null,approved),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:approved,onChange:function onChange(){return handleCheckboxChange(_id);}}))));})));};export default Customers;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js"],"names":["React","useContext","CustomerContext","Container","Table","Customers","customer","setCustomer","updateCustomer","id","console","log","handleCheckboxChange","docid","forEach","element","approved","map","_id","name","email","address"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAiC,OAAjC,CACA,OAAQC,eAAR,KAA8B,4BAA9B,CACA,OAAQC,SAAR,CAAkBC,KAAlB,KAA8B,iBAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,iBACYJ,UAAU,CAACC,eAAD,CADtB,4CACbI,QADa,iBACHC,WADG,iBAGpB,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAQ,CAC3BC,OAAO,CAACC,GAAR,CAAYF,EAAZ,EACC;AACA;AACA;AAEH,CANF,CAQC;AACD,GAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAU,CACnCP,QAAQ,CAACQ,OAAT,CAAiB,SAAAC,OAAO,CAAI,CACxB,GAAGA,OAAO,CAACN,EAAR,GAAeI,KAAlB,CAAwB,CACpBH,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACC,QAApB,EACAN,OAAO,CAACC,GAAR,CAAY,CAACL,QAAD,CAAZ,EACH,CAEJ,CAND,EAOA;AACA;AACA;AAEF,CAZF,CAaA,mBACI,oBAAC,SAAD,EAAW,SAAS,CAAC,WAArB,CAAiC,EAAE,CAAC,SAApC,CAA8C,KAAK,KAAnD,eACI,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,OAAO,KAApB,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAC,MAArC,eACI,2CACI,qCADJ,cAEI,qCAFJ,cAGI,sCAHJ,cAII,wCAJJ,cAKI,yCALJ,CADJ,CAQKA,QAAQ,CAACW,GAAT,CAAa,kBAAEC,CAAAA,GAAF,MAAEA,GAAF,CAAOC,IAAP,MAAOA,IAAP,CAAaC,KAAb,MAAaA,KAAb,CAAoBC,OAApB,MAAoBA,OAApB,CAA6BL,QAA7B,MAA6BA,QAA7B,oBACV,6BAAO,GAAG,CAAEE,GAAZ,eACI,2CACI,8BACKA,GADL,CADJ,cAII,8BACKC,IADL,CAJJ,cAOI,8BACKC,KADL,CAPJ,cAUI,8BACKC,OADL,CAVJ,cAaI,8BACKL,QADL,CAbJ,cAgBI,2CACI,6BAAO,IAAI,CAAC,UAAZ,CAAwB,OAAO,CAAEA,QAAjC,CAA2C,QAAQ,CAAE,0BAAMJ,CAAAA,oBAAoB,CAACM,GAAD,CAA1B,EAArD,EADJ,CAhBJ,CADJ,CADU,EAAb,CARL,CADJ,CADJ,CAqCH,CA9DD,CA+DA,cAAeb,CAAAA,SAAf","sourcesContent":["import React, {useContext } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Table} from 'react-bootstrap'\n\nconst Customers = () => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n\n    const updateCustomer = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         \n     }\n     \n     //when the check box is toggled\n    const handleCheckboxChange = (docid) =>{\n        customer.forEach(element => {\n            if(element.id === docid){\n                console.log(element.approved);\n                console.log([customer])\n            }\n           \n        });\n        //setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n        //setCustomer(PrevCustomer => [ customer[0].approved = !approved])\n        //setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n        \n     }\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n            <Table Table striped hover className=\"mb-0\">\n                <tr>\n                    <th>UUID</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Address</th>\n                    <th>Approved</th>\n                </tr>\n                {customer.map(({_id, name, email, address, approved}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {_id}\n                            </td>\n                            <td>\n                                {name}\n                            </td>\n                            <td>\n                                {email}\n                            </td>\n                            <td>\n                                {address}\n                            </td>\n                            <td>\n                                {approved}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\"  checked={approved} onChange={() => handleCheckboxChange(_id)} />\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n    )\n}\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}