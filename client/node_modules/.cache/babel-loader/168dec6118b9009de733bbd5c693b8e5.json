{"ast":null,"code":"import _objectWithoutProperties from\"/Users/akinyemi/Desktop/tazwizinc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';var ProtectedRoute=function ProtectedRoute(_ref){var auth=_ref.auth,Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"auth\",\"component\"]);var token=localStorage.getItem('authToken');return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){if(token!=null){return/*#__PURE__*/React.createElement(Component,Object.assign({},rest,props));}else{return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/',state:{from:props.location}}});}}}));};export default ProtectedRoute;// import React, {useContext,useEffect} from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import {UserContext} from '../context/UsersContext'\n// //Protected route\n// const  ProtectedRoute = ({component:Component, ...rest})  => {\n//     const token = localStorage.getItem('authToken')\n//     const [isLoggedIn, setIsLoggedIn] = useContext(UserContext)\n//     useEffect(() => {\n//         if(token != null ){\n//             setIsLoggedIn(true)\n//         }\n//     });\n//     return (\n//        <Route {...rest} render={(props) => localStorage.getItem('authToken') ? (\n//               <Component {...props}/>\n//        ) :\n//               <Redirect to=\"/\"/>\n//         //    }else{\n//         //     console.log(props)\n//         //         return <Redirect to=\"/\"/>\n//         //    }\n//         }\n//        />\n//     )\n// }\n// export default ProtectedRoute","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","auth","Component","component","rest","token","localStorage","getItem","props","pathname","state","from","location"],"mappings":"mLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAA+B,kBAA/B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA4C,IAAzCC,CAAAA,IAAyC,MAAzCA,IAAyC,CAAzBC,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,qDAE/D,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd,CACI,mBACE,oBAAC,KAAD,kBAAWH,IAAX,EAAiB,MAAM,CACrB,gBAAAI,KAAK,CAAI,CACP,GAAIH,KAAK,EAAI,IAAb,CAAmB,CACjB,mBAAO,oBAAC,SAAD,kBAAeD,IAAf,CAAyBI,KAAzB,EAAP,CACD,CAFD,IAEO,CACL,mBAAO,oBAAC,QAAD,EAAU,EAAE,CACjB,CACEC,QAAQ,CAAE,GADZ,CAEEC,KAAK,CAAE,CACLC,IAAI,CAAEH,KAAK,CAACI,QADP,CAFT,CADK,EAAP,CAQD,CACF,CAdH,GADF,CAkBD,CArBP,CAuBA,cAAeZ,CAAAA,cAAf,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { Route ,Redirect} from 'react-router-dom';\n\nconst ProtectedRoute = ({ auth,component: Component, ...rest }) => {\n\n    const token = localStorage.getItem('authToken')\n        return (\n          <Route {...rest} render={\n            props => {\n              if (token != null) {\n                return <Component {...rest} {...props} />\n              } else {\n                return <Redirect to={\n                  {\n                    pathname: '/',\n                    state: {\n                      from: props.location\n                    }\n                  }\n                } />\n              }\n            }\n          } />\n        )\n      }\n\nexport default ProtectedRoute;\n// import React, {useContext,useEffect} from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import {UserContext} from '../context/UsersContext'\n// //Protected route\n// const  ProtectedRoute = ({component:Component, ...rest})  => {\n//     const token = localStorage.getItem('authToken')\n//     const [isLoggedIn, setIsLoggedIn] = useContext(UserContext)\n//     useEffect(() => {\n//         if(token != null ){\n//             setIsLoggedIn(true)\n//         }\n//     });\n//     return (\n//        <Route {...rest} render={(props) => localStorage.getItem('authToken') ? (\n    \n//               <Component {...props}/>\n//        ) :\n//               <Redirect to=\"/\"/>\n//         //    }else{\n//         //     console.log(props)\n//         //         return <Redirect to=\"/\"/>\n//         //    }\n//         }\n//        />\n//     )\n// }\n\n// export default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}