{"ast":null,"code":"import _slicedToArray from\"/Users/akinyemi/Desktop/desktop/tazwizInc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{Button,Card,FormControl,FormGroup,Form}from'react-bootstrap';import axios from'axios';var SignUp=function SignUp(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),errMsg=_useState8[0],setErrMsg=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showMsg=_useState10[0],setShowMsg=_useState10[1];//const [isAuth, setIsAuth] = useContext(UserContext)\n//handle when login is clicked\nvar onSignUp=function onSignUp(e){e.preventDefault();if(password!==confirmPassword){setErrMsg(\"Password must Match!\");setShowMsg(true);}else{setShowMsg(false);axios.post('/api/users',{email:email,password:password}).then(function(res){console.log(res);if(res.data.users){props.history.push('/login');}setErrMsg(\"Invalid information Entered\");// setUsers(res.data)\n}).catch(function(err){setErrMsg(\"Invalid information Entered\");setShowMsg(true);});}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,{style:{marginTop:'14%',width:'50%',marginRight:'15%',marginLeft:'25%'}},/*#__PURE__*/React.createElement(Form,{id:\"FormCSS\",onSubmit:onSignUp},/*#__PURE__*/React.createElement(\"h2\",null,\"Register\"),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormControl,{type:\"email\",name:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},required:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormControl,{type:\"password\",name:\"password\",placeholder:\"Password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);},required:true})),/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormControl,{type:\"password\",name:\"newPassword\",placeholder:\"ConfirmPassword\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);},required:true})),showMsg?/*#__PURE__*/React.createElement(\"p\",{className:\"alert alert-danger\"},errMsg):null,/*#__PURE__*/React.createElement(Button,{variant:\"outline-primary\",size:\"lg\",type:\"submit\"},\"Register\"),/*#__PURE__*/React.createElement(\"div\",{className:\"container signin\"},/*#__PURE__*/React.createElement(\"p\",null,\"Already have an account? \",/*#__PURE__*/React.createElement(\"a\",{href:\"/login\"},\"Sign in\"),\".\")))));};export default SignUp;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/desktop/tazwizInc/client/src/pages/SignUp.js"],"names":["React","useState","useContext","Button","Card","FormControl","FormGroup","Form","axios","SignUp","props","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errMsg","setErrMsg","showMsg","setShowMsg","onSignUp","e","preventDefault","post","then","res","console","log","data","users","history","push","catch","err","marginTop","width","marginRight","marginLeft","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useContext} from 'react'\nimport { Button,Card,FormControl,FormGroup,Form} from 'react-bootstrap';\nimport axios from 'axios'\n\nconst SignUp = (props) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [errMsg, setErrMsg] = useState('')\n    const [showMsg, setShowMsg] = useState(false)\n   //const [isAuth, setIsAuth] = useContext(UserContext)\n       \n    //handle when login is clicked\n    const onSignUp = (e) => {\n        e.preventDefault();\n        if(password !== confirmPassword){\n            setErrMsg(\"Password must Match!\");\n            setShowMsg(true)\n        }else{\n        setShowMsg(false);\n        axios.post('/api/users',{email, password})\n            .then(res => { \n                console.log(res)\n               if(res.data.users){\n                 \n                    props.history.push('/login')\n                    \n                }\n                setErrMsg(\"Invalid information Entered\");\n           // setUsers(res.data)\n            }).catch(err =>{  setErrMsg(\"Invalid information Entered\");\n            setShowMsg(true);\n        })\n    }\n    }\n    return (\n        <div>\n            <Card style={{ marginTop:'14%', width: '50%', marginRight:'15%',  marginLeft:'25%'  }}>\n                <Form id=\"FormCSS\" onSubmit={onSignUp}> \n                    <h2>Register</h2>\n                    <FormGroup>\n                        <FormControl type=\"email\" name=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <FormControl type=\"password\" name=\"newPassword\" placeholder=\"ConfirmPassword\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required/>\n                    </FormGroup>\n                    {showMsg ? <p className=\"alert alert-danger\">{errMsg}</p> : null }\n                    <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\" >\n                        Register\n                    </Button>\n                    <div className=\"container signin\">\n                        <p>Already have an account? <a href=\"/login\">Sign in</a>.</p>\n                    </div>\n                </Form>\n                {/* { !isLoggedIn ? null : <Redirect to=\"/dashboard\" /> } */}\n            </Card>\n        </div>\n    )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}