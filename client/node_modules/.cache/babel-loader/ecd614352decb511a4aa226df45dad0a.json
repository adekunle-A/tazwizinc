{"ast":null,"code":"import _slicedToArray from\"/Users/akinyemi/Desktop/tazwizinc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{CustomerContext}from'../context/CustomerContext';import{Container,Table}from'react-bootstrap';import axios from'axios';var Customers=function Customers(){var _useContext=useContext(CustomerContext),_useContext2=_slicedToArray(_useContext,2),customer=_useContext2[0],setCustomer=_useContext2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),approve=_useState2[0],setApprove=_useState2[1];//when the check box is toggled\nvar handleCheckboxChange=function handleCheckboxChange(docid){setApprove(!approve);axios.patch('/customers/'+docid,{approved:approve}).then(function(res){console.log(res);}).catch(function(err){return console.log(err);});};return/*#__PURE__*/React.createElement(Container,{className:\"container\",id:\"dataDiv\",fluid:true},/*#__PURE__*/React.createElement(Table,{Table:true,striped:true,hover:true,className:\"mb-0\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"UUID\"),/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Email\"),/*#__PURE__*/React.createElement(\"th\",null,\"Address\"),/*#__PURE__*/React.createElement(\"th\",null,\"Approved\"),/*#__PURE__*/React.createElement(\"th\",null,\"Action\"))),customer.map(function(_ref){var _id=_ref._id,name=_ref.name,email=_ref.email,address=_ref.address,approved=_ref.approved;return/*#__PURE__*/React.createElement(\"tbody\",{key:_id},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,_id),/*#__PURE__*/React.createElement(\"td\",null,name),/*#__PURE__*/React.createElement(\"td\",null,email),/*#__PURE__*/React.createElement(\"td\",null,address),/*#__PURE__*/React.createElement(\"td\",null,approved.toString()),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:approved,onClick:function onClick(){return setApprove(!approved);},onChange:function onChange(){return handleCheckboxChange(_id);}}))));})));};export default Customers;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js"],"names":["React","useContext","useState","CustomerContext","Container","Table","axios","Customers","customer","setCustomer","approve","setApprove","handleCheckboxChange","docid","patch","approved","then","res","console","log","catch","err","map","_id","name","email","address","toString"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAAQC,eAAR,KAA8B,4BAA9B,CACA,OAAQC,SAAR,CAAkBC,KAAlB,KAA8B,iBAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,iBACYN,UAAU,CAACE,eAAD,CADtB,4CACbK,QADa,iBACHC,WADG,+BAEUP,QAAQ,CAAC,KAAD,CAFlB,wCAEbQ,OAFa,eAEJC,UAFI,eAInB;AACD,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAU,CACnCF,UAAU,CAAC,CAACD,OAAF,CAAV,CACAJ,KAAK,CAACQ,KAAN,CAAY,cAAeD,KAA3B,CAAkC,CAACE,QAAQ,CAAEL,OAAX,CAAlC,EACCM,IADD,CACM,SAAAC,GAAG,CAAI,CACTC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACH,CAHD,EAICG,KAJD,CAIO,SAAAC,GAAG,QAAIH,CAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ,EAJV,EAMF,CARF,CASA,mBACI,oBAAC,SAAD,EAAW,SAAS,CAAC,WAArB,CAAiC,EAAE,CAAC,SAApC,CAA8C,KAAK,KAAnD,eACI,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,OAAO,KAApB,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAC,MAArC,eACI,8CACI,2CACI,qCADJ,cAEI,qCAFJ,cAGI,sCAHJ,cAII,wCAJJ,cAKI,yCALJ,cAMI,uCANJ,CADJ,CADJ,CAWKb,QAAQ,CAACc,GAAT,CAAa,kBAAEC,CAAAA,GAAF,MAAEA,GAAF,CAAOC,IAAP,MAAOA,IAAP,CAAaC,KAAb,MAAaA,KAAb,CAAoBC,OAApB,MAAoBA,OAApB,CAA6BX,QAA7B,MAA6BA,QAA7B,oBACV,6BAAO,GAAG,CAAEQ,GAAZ,eACI,2CACI,8BACKA,GADL,CADJ,cAII,8BACKC,IADL,CAJJ,cAOI,8BACKC,KADL,CAPJ,cAUI,8BACKC,OADL,CAVJ,cAaI,8BACKX,QAAQ,CAACY,QAAT,EADL,CAbJ,cAgBI,2CACI,6BAAO,IAAI,CAAC,UAAZ,CAAwB,OAAO,CAAEZ,QAAjC,CAA2C,OAAO,CAAE,yBAAMJ,CAAAA,UAAU,CAAC,CAACI,QAAF,CAAhB,EAApD,CAAiF,QAAQ,CAAE,0BAAMH,CAAAA,oBAAoB,CAACW,GAAD,CAA1B,EAA3F,EADJ,CAhBJ,CADJ,CADU,EAAb,CAXL,CADJ,CADJ,CAwCH,CAtDD,CAuDA,cAAehB,CAAAA,SAAf","sourcesContent":["import React, {useContext, useState } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Table} from 'react-bootstrap'\nimport axios from 'axios'\nconst Customers = () => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n    const [approve, setApprove] = useState(false)\n     \n     //when the check box is toggled\n    const handleCheckboxChange = (docid) =>{\n        setApprove(!approve)\n        axios.patch('/customers/'+ docid, {approved: approve})\n        .then(res => { \n            console.log(res)\n        })\n        .catch(err => console.log(err))\n        \n     }\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>UUID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Address</th>\n                        <th>Approved</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                {customer.map(({_id, name, email, address, approved}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {_id}\n                            </td>\n                            <td>\n                                {name}\n                            </td>\n                            <td>\n                                {email}\n                            </td>\n                            <td>\n                                {address}\n                            </td>\n                            <td>\n                                {approved.toString()}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\"  checked={approved} onClick={() => setApprove(!approved)} onChange={() => handleCheckboxChange(_id)} />\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n    )\n}\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}