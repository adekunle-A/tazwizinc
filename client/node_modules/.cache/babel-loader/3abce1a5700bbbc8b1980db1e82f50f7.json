{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js\";\nimport React, { useContext, useState } from 'react';\nimport { CustomerContext } from '../context/CustomerContext';\nimport { Container, Table } from 'react-bootstrap';\n\nconst Customers = () => {\n  const [customer, setCustomer] = useContext(CustomerContext);\n  const [approved, setApproved] = useState();\n\n  const updateCustomer = id => {\n    console.log(id); // axios.patch('')\n    //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n    //      .catch(err => console.log(err))\n  }; //when the check box is toggled\n\n\n  const handleCheckboxChange = docid => {\n    customer.forEach(element => {\n      if (element.id === docid) {\n        console.log(element.approved);\n        console.log([customer]);\n      }\n    }); //setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n    //setCustomer(PrevCustomer => [ customer[0].approved = !approved])\n    //setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"container\",\n    id: \"dataDiv\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    Table: true,\n    striped: true,\n    hover: true,\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"UUID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Approved\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"Action\"))), customer.map(({\n    _id,\n    name,\n    email,\n    address,\n    approved\n  }) => /*#__PURE__*/React.createElement(\"tbody\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, _id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, address), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, approved.toString()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: approve,\n    onChange: () => handleCheckboxChange(_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default Customers;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/Customers.js"],"names":["React","useContext","useState","CustomerContext","Container","Table","Customers","customer","setCustomer","approved","setApproved","updateCustomer","id","console","log","handleCheckboxChange","docid","forEach","element","map","_id","name","email","address","toString","approve"],"mappings":"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","sourcesContent":["import React, {useContext, useState } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Table} from 'react-bootstrap'\n\nconst Customers = () => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n    const [approved, setApproved] = useState()\n\n    const updateCustomer = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         \n     }\n     \n     //when the check box is toggled\n    const handleCheckboxChange = (docid) =>{\n        customer.forEach(element => {\n            if(element.id === docid){\n                console.log(element.approved);\n                console.log([customer])\n            }\n           \n        });\n        //setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n        //setCustomer(PrevCustomer => [ customer[0].approved = !approved])\n        //setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n        \n     }\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>UUID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Address</th>\n                        <th>Approved</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                {customer.map(({_id, name, email, address, approved}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {_id}\n                            </td>\n                            <td>\n                                {name}\n                            </td>\n                            <td>\n                                {email}\n                            </td>\n                            <td>\n                                {address}\n                            </td>\n                            <td>\n                                {approved.toString()}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\"  checked={approve} onChange={() => handleCheckboxChange(_id)} />\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n    )\n}\nexport default Customers;\n"]},"metadata":{},"sourceType":"module"}