{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/tazwizinc/client/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Route, Redirect, useEffect, UserContext } from 'react-router-dom'; //Protected route\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const isAuth = localStorage.getItem('isAuth');\n  const [isLoggedIn, setIsLoggedIn] = useContext(UserContext);\n  useEffect(() => {\n    if (isAuth != null) {\n      setIsLoggedIn(isAuth);\n    }\n  });\n  console.log(isAuth);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (isLoggedIn) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 24\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }\n  }));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","useEffect","UserContext","ProtectedRoute","component","Component","rest","isAuth","localStorage","getItem","isLoggedIn","setIsLoggedIn","useContext","console","log","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,WAAnC,QAAsD,kBAAtD,C,CACA;;AACA,MAAOC,cAAc,GAAG,CAAC;AAACC,EAAAA,SAAS,EAACC,SAAX;AAAsB,KAAGC;AAAzB,CAAD,KAAqC;AACzD,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,UAAU,CAACV,WAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGM,MAAM,IAAI,IAAb,EAAmB;AACfI,MAAAA,aAAa,CAACJ,MAAD,CAAb;AACH;AACJ,GAJQ,CAAT;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,sBACG,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,MAAM,EAAES,KAAK,IAAI;AAC9B,UAAGL,UAAH,EAAc;AACT,4BAAO,oBAAC,SAAD,oBAAeK,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACJ,OAFD,MAEK;AAEA,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EACf;AACIC,YAAAA,QAAQ,EAAC,GADb;AAEIC,YAAAA,KAAK,EACL;AACIC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADhB;AAHJ,WADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASJ;AACJ,KAfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH;AAmBH,CA5BD;;AA8BA,eAAehB,cAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect,useEffect,UserContext } from 'react-router-dom'\n//Protected route\nconst  ProtectedRoute = ({component:Component, ...rest})  => {\n    const isAuth = localStorage.getItem('isAuth');\n    const [isLoggedIn, setIsLoggedIn] = useContext(UserContext)\n    useEffect(() => {\n        if(isAuth != null ){\n            setIsLoggedIn(isAuth)\n        }\n    });\n    console.log(isAuth)\n    return (\n       <Route {...rest} render={props => {\n           if(isLoggedIn){\n                return <Component {...props}/>\n           }else{\n               \n                return <Redirect to={\n                    {\n                        pathname:\"/\",\n                        state:\n                        {\n                            from: props.location\n                        }\n                    }\n                }/>\n           }\n       }}\n       />\n    )\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}