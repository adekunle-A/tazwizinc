{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/desktop/tazwizInc/client/src/pages/Login.js\";\nimport React, { useState, useContext } from 'react';\nimport { Button, Card, FormControl, FormGroup, Form } from 'react-bootstrap';\nimport { UserContext } from '../context/UsersContext';\nimport axios from 'axios';\n\nconst Login = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [isAuth, setIsAuth] = useContext(UserContext); //handle when login is clicked\n\n  const onLogin = e => {\n    e.preventDefault();\n    axios.post('/api/authUsers', {\n      email,\n      password\n    }).then(res => {\n      if (res.data.users) {\n        setIsAuth(res.data.users.status);\n        localStorage.setItem('authToken', res.data.token);\n        localStorage.setItem('isAuth', res.data.users.status);\n        console.log(res.data.token);\n        props.history.push('/dashboard');\n      }\n\n      setErrMsg(\"Invalid information Entered\"); // setUsers(res.data)\n    }).catch(err => {\n      setErrMsg(\"Invalid information Entered\");\n      ;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: '14%',\n      width: '50%',\n      marginRight: '15%',\n      marginLeft: '25%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"FormCSS\",\n    onSubmit: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Login Form\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, errMsg), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    size: \"lg\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Login\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/desktop/tazwizInc/client/src/pages/Login.js"],"names":["React","useState","useContext","Button","Card","FormControl","FormGroup","Form","UserContext","axios","Login","props","email","setEmail","password","setPassword","errMsg","setErrMsg","isAuth","setIsAuth","onLogin","e","preventDefault","post","then","res","data","users","status","localStorage","setItem","token","console","log","history","push","catch","err","marginTop","width","marginRight","marginLeft","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useContext} from 'react'\nimport { Button,Card,FormControl,FormGroup,Form} from 'react-bootstrap';\nimport {UserContext} from '../context/UsersContext'\n\nimport axios from 'axios'\n const Login = (props) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errMsg, setErrMsg] = useState('')\n    const [isAuth, setIsAuth] = useContext(UserContext)\n    \n    //handle when login is clicked\n    const onLogin = (e) => {\n        e.preventDefault();\n        axios.post('/api/authUsers',{email, password})\n            .then(res => { \n               if(res.data.users){\n                    setIsAuth(res.data.users.status)\n                    localStorage.setItem('authToken', res.data.token)\n                    localStorage.setItem('isAuth', res.data.users.status)\n                    console.log(res.data.token)\n                    props.history.push('/dashboard')\n                }\n                setErrMsg(\"Invalid information Entered\");\n           // setUsers(res.data)\n            }).catch(err =>{  setErrMsg(\"Invalid information Entered\");;\n        })\n    }\n\n    return (\n        <div>\n            <Card style={{ marginTop:'14%', width: '50%', marginRight:'15%',  marginLeft:'25%'  }}>\n                <Form id=\"FormCSS\" onSubmit={onLogin}> \n                    <label>Login Form</label>\n                    <FormGroup>\n                        <FormControl type=\"email\" name=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\n                    </FormGroup>\n                    <p>{errMsg}</p>\n                    <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\" >\n                        Login\n                    </Button>\n\n                </Form>\n                {/* { !isLoggedIn ? null : <Redirect to=\"/dashboard\" /> } */}\n            </Card>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}