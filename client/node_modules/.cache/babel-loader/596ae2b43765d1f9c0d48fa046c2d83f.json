{"ast":null,"code":"var _jsxFileName = \"/Users/akinyemi/Desktop/tazwizinc/client/src/components/ProtectedRoute.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserContext } from '../context/UsersContext'; //Protected route\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const token = localStorage.getItem('authToken');\n  const [isLoggedIn, setIsLoggedIn] = useContext(UserContext);\n  useEffect(() => {\n    if (token != null) {\n      setIsLoggedIn(true);\n    }\n  });\n  console.log(auth);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: () => localStorage.getItem('authToken') ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }) //    }else{\n    //     console.log(props)\n    //         return <Redirect to=\"/\"/>\n    //    }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }\n  }));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["/Users/akinyemi/Desktop/tazwizinc/client/src/components/ProtectedRoute.js"],"names":["React","useContext","useEffect","Route","Redirect","UserContext","ProtectedRoute","component","Component","rest","token","localStorage","getItem","isLoggedIn","setIsLoggedIn","console","log","auth","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAQC,WAAR,QAA0B,yBAA1B,C,CACA;;AACA,MAAOC,cAAc,GAAG,CAAC;AAACC,EAAAA,SAAS,EAACC,SAAX;AAAsB,KAAGC;AAAzB,CAAD,KAAqC;AACzD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,UAAU,CAACI,WAAD,CAA9C;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGQ,KAAK,IAAI,IAAZ,EAAkB;AACdI,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAJQ,CAAT;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,sBACG,oBAAC,KAAD,oBAAWR,IAAX;AAAiB,IAAA,MAAM,EAAE,MAAME,YAAY,CAACC,OAAb,CAAqB,WAArB,iBAExB,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFwB,gBAIxB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJgB,CAKtB;AACA;AACA;AACA;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH;AAaH,CAtBD;;AAwBA,eAAeZ,cAAf","sourcesContent":["import React, {useContext,useEffect} from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport {UserContext} from '../context/UsersContext'\n//Protected route\nconst  ProtectedRoute = ({component:Component, ...rest})  => {\n    const token = localStorage.getItem('authToken')\n    const [isLoggedIn, setIsLoggedIn] = useContext(UserContext)\n    useEffect(() => {\n        if(token != null ){\n            setIsLoggedIn(true)\n        }\n    });\n    console.log(auth)\n    return (\n       <Route {...rest} render={() => localStorage.getItem('authToken') ? (\n    \n              <Component {...props}/>\n       ) :\n              <Redirect to=\"/\"/>\n        //    }else{\n        //     console.log(props)\n        //         return <Redirect to=\"/\"/>\n        //    }\n        }\n       />\n    )\n}\n\nexport default ProtectedRoute\n"]},"metadata":{},"sourceType":"module"}