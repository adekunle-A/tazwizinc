{"version":3,"sources":["components/Login.js","components/MenuBar.js","context/ProductContext.js","components/AddProduct.js","components/Products.js","context/CustomerContext.js","components/Customers.js","pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","email","password","Card","style","marginTop","width","marginRight","marginLeft","Form","id","FormGroup","FormControl","type","name","placeholder","required","Button","variant","size","Component","MenuBar","Navbar","bg","fixed","Brand","href","Nav","className","defaultActiveKey","Link","ProductContext","createContext","ProductProvider","useState","product","setProduct","useEffect","axios","get","then","res","data","catch","err","console","error","Provider","value","children","AddProduct","setName","price","setPrice","description","setDescription","onSubmit","e","preventDefault","post","log","onChange","target","Products","useContext","Container","fluid","Table","striped","hover","map","_id","productName","ProductPrice","ProductDescription","ProductCreatedDate","key","onClick","PrevProduct","filter","delete","CustomerContext","CustomerProvider","customer","setCustomer","Customers","address","approved","checked","docid","forEach","element","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ca518605.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button,Card,FormControl,FormGroup,Form} from 'react-bootstrap';\n\nclass Login extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            email: '',\n            password:''\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Card style={{ marginTop:'14%', width: '50%', marginRight:'15%',  marginLeft:'25%'  }}>\n                    <Form id=\"FormCSS\"> \n                        <label>Login Form</label>\n                        <FormGroup>\n                            <FormControl type=\"email\" name=\"email\" placeholder=\"Enter email\" required/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" required/>\n                        </FormGroup>\n\n                        <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\">\n                            Login\n                        </Button>\n\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from 'react'\nimport {Navbar, Nav} from 'react-bootstrap'\nexport default function MenuBar() {\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Navbar.Brand href=\"/dasboard\">Tazwiz Inc</Navbar.Brand>\n                <Nav className=\"mr-auto\" variant=\"\" defaultActiveKey=\"/dashboard\">\n                    <Nav.Link href=\"/dashboard\">Home</Nav.Link>\n                    <Nav.Link href=\"/products\">Products</Nav.Link>\n                    <Nav.Link href=\"/customers\" >Customers</Nav.Link>\n                </Nav>\n            </Navbar>\n        </div>\n    )\n}\n","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nexport const ProductContext = createContext();\nexport const ProductProvider = props => {\n      const [product, setProduct] = useState([]);\n\n    //fetch products infromation from the database\n   const getProducts = () => {\n        axios.get('/products')\n             .then(res => {\n                setProduct(res.data)\n             }).catch(err =>{ console.error(err);\n             })\n    }\n    useEffect(() => {\n        getProducts();\n    });\n    //add product info into the database\n    const postProduct = () => {\n        axios.post('/products')\n             .then(res => {\n                setProduct(res.data)})\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n    const deleteProduct = () => {\n        axios.delete('/products/')\n             .then(res => {\n                setProduct(res.data)})\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n    //update product\n    const updateProduct = () => {\n        axios.patch('/products/')\n             .then(res => {\n                setProduct(res.data)})\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n\n   return (\n       <ProductContext.Provider value={[product,setProduct]}>\n           {props.children}\n        </ProductContext.Provider>  \n   )\n}\n export default  ProductProvider;\n","import React, { useState, useContext } from 'react';\nimport {ProductContext} from '../context/ProductContext'\nimport { Button} from 'react-bootstrap';\nimport axios from 'axios'\n\nconst AddProduct = () => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    \n    //when add is clicked\n    const onSubmit = (e) => {\n        e.preventDefault();\n        //setProduct(PrevProduct => [...PrevProduct, {name,price,description}]) //create a copy of the array and add new data to it \n        //add the product to the database\n        axios.post('/products', {name,price,description}) //TODO to call function from context\n            .then(res => {\n               console.log(res)\n            })\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n    return (\n            <form onSubmit={onSubmit} className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"name\" placeholder=\"Enter Product Name\" name=\"name\"  value={name} onChange={(e) => setName(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"number\" className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Price\" name=\"price\" value={price} onChange={(e) => setPrice(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Description\" name=\"description\"  value={description} onChange={(e) => setDescription(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\">\n                            Add\n                        </Button>\n                    </div>\n                </div>\n            </form>\n\n        )\n}\n\nexport default AddProduct\n","import React, { useContext } from 'react'\nimport {ProductContext} from '../context/ProductContext'\nimport {Container,Button, Table} from 'react-bootstrap'\nimport AddProduct from '../components/AddProduct';\nimport axios from 'axios'\nconst Products = () => {\n\n   const [product, setProduct] = useContext(ProductContext)\n   \n   const deleteProduct = (id) => {\n       axios.delete('/products/'+id)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n    const updateProduct = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         setProduct(PrevProduct => [...PrevProduct.filter(product => product.id !== id)]);\n     }\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n             <div>\n                <AddProduct />\n             </div>\n            <Table Table striped hover className=\"mb-0\">\n                 <tr>\n                    <th>ProductName</th>\n                    <th>ProductPrice</th>\n                    <th>ProductDescription</th>\n                    <th>ProductCreatedDate</th>\n                    <th>Action</th>\n                </tr>\n                {product.map(({_id, productName, ProductPrice, ProductDescription, ProductCreatedDate}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {/* <input value={name} onChange={(e) => setName(e.target.value)}/> */}\n                                {productName}\n                            </td>\n                            <td>\n                                    {/* <input value ={price} onChange={(e) => setPricee(e.target.price)}/> */}\n                                {ProductPrice}\n                            </td>\n                            <td>\n                                    {/* <input value ={description}  onChange={(e) => setDecription(e.target.value)} /> */}\n                                {ProductDescription}\n                            </td>\n                            <td>\n                                    {/* <input value ={description}  onChange={(e) => setDecription(e.target.value)} /> */}\n                                {ProductCreatedDate}\n                            </td>\n                            <td>\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => updateProduct(_id)}>\n                                    Edit\n                                </Button>\n                            </td>\n                            <td>\n                                <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteProduct(_id)}>\n                                    Remove\n                                </Button>\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n  \n    )\n}\n\nexport default Products;\n","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\n\nexport const CustomerContext = createContext();\nexport const CustomerProvider = props => {\n   const [customer, setCustomer] = useState([]);\n   const getCustomers = () => {\n      axios.get('/customers')\n           .then(res => {\n               setCustomer(res.data)\n         }).catch(err =>{ console.error(err);\n      })\n    }\n\n    useEffect(() => {\n      getCustomers();\n    });\n    \n   return (\n       <CustomerContext.Provider value={[customer,setCustomer]}>\n           {props.children}\n        </CustomerContext.Provider>  \n   )\n}\n export default  CustomerProvider;","import React, {useContext } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Table} from 'react-bootstrap'\n\nconst Customers = () => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n\n    const updateCustomer = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         \n     }\n     \n     //when the check box is toggled\n    const handleCheckboxChange = (docid) =>{\n        customer.forEach(element => {\n            if(element.id === docid){\n                console.log(element.approved);\n                console.log([customer])\n            }\n           \n        });\n        //setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n        //setCustomer(PrevCustomer => [ customer[0].approved = !approved])\n        //setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n        \n     }\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n            <Table Table striped hover className=\"mb-0\">\n                <tr>\n                    <th>UUID</th>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Address</th>\n                    <th>Approved</th>\n                </tr>\n                {customer.map(({_id, name, email, address, approved}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {_id}\n                            </td>\n                            <td>\n                                {name}\n                            </td>\n                            <td>\n                                {email}\n                            </td>\n                            <td>\n                                {address}\n                            </td>\n                            <td>\n                                {approved}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\"  checked={approved} onChange={() => handleCheckboxChange(_id)} />\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n    )\n}\nexport default Customers;\n","import React, { Component } from 'react';\nimport Products from '../components/Products'\nimport AddProduct from '../components/AddProduct';\nimport Customers from '../components/Customers';\nclass Dashboard extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <div className=\"container\" id=\"dashboard\">\n                <Products />\n                {/* <Customers /> */}\n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Login from './components/Login';\nimport MenuBar from './components/MenuBar';\nimport {ProductProvider} from './context/ProductContext'\nimport Dashboard from './pages/Dashboard';\nimport Products from './components/Products';\nimport Customers from './components/Customers';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport { CustomerProvider } from './context/CustomerContext';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <CustomerProvider>\n        <ProductProvider>\n            <div className=\"App\">\n                <MenuBar />\n                {/* <Login /> */}\n                <Switch>\n                  <Route path=\"/\" exact={true} component={Login}/>\n                  <Route path=\"/products\" exact component={Products}/>\n                  <Route path=\"/customers\" exact component={Customers}/>\n                  <Route path=\"/dashboard\" exact component={Products}/>\n                </Switch>\n                {/* <Dashboard /> */}\n            </div>\n        </ProductProvider>\n      </CustomerProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}