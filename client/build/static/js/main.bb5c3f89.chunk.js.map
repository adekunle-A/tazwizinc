{"version":3,"sources":["context/UsersContext.js","components/MenuBar.js","context/ProductContext.js","components/AddProduct.js","components/Products.js","context/CustomerContext.js","components/Customers.js","pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","setUsers","isLoggedIn","setIsLoggedIn","useEffect","axios","get","then","res","data","catch","err","console","error","Provider","value","children","MenuBar","Navbar","bg","variant","fixed","Brand","href","Nav","className","defaultActiveKey","Link","ProductContext","ProductProvider","product","setProduct","AddProduct","name","setName","price","setPrice","description","setDescription","onSubmit","e","preventDefault","post","log","type","id","placeholder","onChange","target","required","min","Button","size","Products","editing","SetEditing","Container","fluid","toString","Table","striped","hover","map","_id","productName","ProductPrice","ProductDescription","ProductCreatedDate","key","contenteditable","onInput","innerText","format","onClick","pID","patch","delete","CustomerContext","CustomerProvider","customer","setCustomer","Customers","useContext","approve","setApprove","email","address","approved","checked","docid","Dashboard","msg","UsersContext","App","exact","path","to","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bb5c3f89.chunk.js","sourcesContent":["import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nexport const UserContext = createContext();\n\nexport const UserProvider = props => {\n      const [users, setUsers] = useState([]);\n      const [isLoggedIn, setIsLoggedIn] = useState(false);\n    //Get Token\n\n    //fetch products infromation from the database\n   const getUsers = () => {\n        axios.get('/api/authUsers')\n             .then(res => {\n                setUsers(res.data)\n                setIsLoggedIn(true)\n             }).catch(err =>{ console.error(err);\n        })\n    }\n    useEffect(() => {\n        getUsers();\n    });\n    \n   return (\n       <UserContext.Provider value={[isLoggedIn, setIsLoggedIn] }>\n           {props.children}\n        </UserContext.Provider>  \n   )\n}\n export default UserProvider;\n","import React from 'react'\nimport {Navbar, Nav} from 'react-bootstrap'\nexport default function MenuBar() {\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Navbar.Brand href=\"/dashboard\">Tazwiz Inc</Navbar.Brand>\n                <Nav className=\"mr-auto\" variant=\"\" defaultActiveKey=\"/dashboard\">\n                    <Nav.Link href=\"/dashboard\">Home</Nav.Link>\n                    <Nav.Link href=\"/products\">Products</Nav.Link>\n                    <Nav.Link href=\"/customers\" >Customers</Nav.Link>\n                </Nav>\n            </Navbar>\n        </div>\n    )\n}\n","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nexport const ProductContext = createContext();\n\nexport const ProductProvider = props => {\n      const [product, setProduct] = useState([]);\n\n    //fetch products infromation from the database\n   const getProducts = () => {\n        axios.get('/api/products')\n             .then(res => {\n                setProduct(res.data)\n             }).catch(err =>{ console.error(err);\n             })\n    }\n    useEffect(() => {\n        getProducts();\n    });\n   return (\n       <ProductContext.Provider value={[product,setProduct]}>\n           {props.children}\n        </ProductContext.Provider>  \n   )\n}\n export default  ProductProvider;\n","import React, { useState, useContext } from 'react';\nimport {ProductContext} from '../context/ProductContext'\nimport { Button} from 'react-bootstrap';\nimport axios from 'axios'\n\nconst AddProduct = () => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    \n    //when add is clicked\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        //add the product to the database\n        axios.post('/products', {name,price,description}) //TODO to call function from context\n            .then(res => {\n               console.log(res)\n            })\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n    return (\n            <form onSubmit={onSubmit} className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"name\" placeholder=\"Enter Product Name\" name=\"name\"  value={name} onChange={(e) => setName(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"number\" min=\"1\"className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Price\" name=\"price\" value={price} onChange={(e) => setPrice(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Description\" name=\"description\"  value={description} onChange={(e) => setDescription(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\">\n                            Add\n                        </Button>\n                    </div>\n                </div>\n            </form>\n\n        )\n}\n\nexport default AddProduct\n","import React, { useContext, useState,useEffect } from 'react'\nimport {ProductContext} from '../context/ProductContext'\nimport {Container,Button, Table} from 'react-bootstrap'\nimport AddProduct from '../components/AddProduct';\nimport Moment from 'react-moment';\nimport axios from 'axios'\nconst Products = () => {\n   const [productInfo, setProductInfo] = useState({})\n   const [name, setName] = useState('');\n   const [price, setPrice] = useState('');  \n   const [editing, SetEditing] = useState(false)\n//    const [product, setProduct] = useContext(ProductContext)\n\n   const [product, setProduct] = useState([]);\n\n        //fetch products infromation from the database\n        const getProducts = () => {\n            axios.get('/api/products')\n                .then(res => {\n                    setProduct(res.data)\n                }).catch(err =>{ console.error(err);\n                })\n        }\n        useEffect(() => {\n            getProducts();\n        });\n\n    //delete product when remove is clicked\n   const deleteProduct = (id) => {\n       axios.delete('/api/products/'+id)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n\n    //save the data once the save button is clicked\n    const SaveProduct = (pID) => {\n        SetEditing(false);\n        console.log(price)\n        axios.patch('/api/products/'+ pID, {ProductPrice: price})\n        .then(res => { \n            console.log(res)\n        })\n        .catch(err => console.log(err))\n        \n     }\n\n     //sets edit mode\n    const EditProduct = (id) => {\n        SetEditing( editing => !editing);\n     }\n\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n             <div>\n                <AddProduct />\n             </div>\n             <p>Edit mode {editing.toString()} </p>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>ProductName</th>\n                        <th>ProductPrice (CAD)</th>\n                        <th>ProductDescription</th>\n                        <th>ProductCreatedDate</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                {product.map(({_id, productName, ProductPrice, ProductDescription, ProductCreatedDate}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td contenteditable={editing} onInput={(e) => setName(e.target.innerText)} >\n                                {productName}\n                            </td>\n                            <td contenteditable='true' onInput={(e) => setPrice(e.target.innerText)}>\n                                    {/* <input value ={price} onChange={(e) => setPricee(e.target.price)}/> */}\n                                {ProductPrice}\n                            </td>\n                            <td>\n                                {ProductDescription}\n                            </td>\n                            <td>\n                                    <Moment format=\"YYYY-MM-DD\">{ProductCreatedDate}</Moment> \n                            </td>\n                            <td>\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => editing ? SaveProduct(_id): EditProduct(_id)}>\n                                   { editing === false ?  'Edit': 'Save' }\n                                </Button>\n                            </td>\n                            <td>\n                                <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteProduct(_id)}>\n                                    Remove\n                                </Button>\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n  \n    )\n}\n\nexport default Products;\n","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\n\nexport const CustomerContext = createContext();\nexport const CustomerProvider = props => {\n   const [customer, setCustomer] = useState([]);\n   const getCustomers = () => {\n      axios.get('/api/customers')\n           .then(res => {\n               setCustomer(res.data)\n         }).catch(err =>{ console.error(err);\n      })\n    }\n\n    useEffect(() => {\n      getCustomers();\n    });\n    \n   return (\n       <CustomerContext.Provider value={[customer,setCustomer]}>\n           {props.children}\n        </CustomerContext.Provider>  \n   )\n}\n export default  CustomerProvider;","import React, {useContext, useState } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Table} from 'react-bootstrap'\nimport axios from 'axios'\nconst Customers = () => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n    const [approve, setApprove] = useState(false)\n     \n     //when the check box is toggled\n    const handleCheckboxChange = (docid) =>{\n        setApprove(!approve)\n        axios.patch('/api/customers/'+ docid, {approved: approve})\n        .then(res => { \n            console.log(res)\n        })\n        .catch(err => console.log(err))\n        \n     }\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>UUID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Address</th>\n                        <th>Approved</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                {customer.map(({_id, name, email, address, approved}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {_id}\n                            </td>\n                            <td>\n                                {name}\n                            </td>\n                            <td>\n                                {email}\n                            </td>\n                            <td>\n                                {address}\n                            </td>\n                            <td>\n                                {approved.toString()}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\"  checked={approved} onClick={() => setApprove(!approved)} onChange={() => handleCheckboxChange(_id)} />\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n    )\n}\nexport default Customers;\n","import React, { Component, useContext } from 'react';\nimport Products from '../components/Products'\nimport Customers from '../components/Customers';\nimport  UsersContext from '../context/UsersContext'\n\nconst Dashboard = () => {\n    const msg = useContext(UsersContext)\n    return (\n            <div className=\"container\" id=\"dashboard\">\n                <Products />\n                <Customers />\n                {msg}\n            </div>\n        )\n    }\n\nexport default Dashboard\n","import React, {useState,useContext} from 'react'\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Login from './components/Login';\nimport MenuBar from './components/MenuBar';\nimport {ProductProvider} from './context/ProductContext'\nimport Dashboard from './pages/Dashboard';\nimport Products from './components/Products';\nimport Customers from './components/Customers';\nimport {BrowserRouter, Switch,Redirect,Route} from 'react-router-dom'\nimport { CustomerProvider } from './context/CustomerContext';\nimport {UserProvider} from './context/UsersContext';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <BrowserRouter>\n      <CustomerProvider>\n        <ProductProvider>\n            <div className=\"App\">\n                <MenuBar />\n                {/* <Login /> */}\n                <Switch>\n                  {/* <Route path=\"/\" exact={true} component={Login}></Route> */}\n                  < Route exact path=\"/\">\n                    {isLoggedIn ? <Redirect to=\"/dashboard\" /> : <Dashboard />}\n                  </Route>\n                  <Route path=\"/products\" exact component={Products}/>\n                  <Route path=\"/customers\" exact component={Customers}/>\n                  <Route path=\"/dashboard\" exact component={Dashboard}/>\n                </Switch>\n                {/* <Dashboard /> */}\n            </div>\n        </ProductProvider>\n      </CustomerProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}