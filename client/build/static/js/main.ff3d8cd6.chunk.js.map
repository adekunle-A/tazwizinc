{"version":3,"sources":["context/UsersContext.js","pages/Login.js","components/MenuBar.js","context/ProductContext.js","components/AddProduct.js","pages/Dashboard.js","pages/Products.js","context/CustomerContext.js","pages/Customers.js","components/ErrorPage.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","setUsers","isAuth","setIsAuth","useEffect","axios","get","then","res","data","catch","err","console","error","Provider","value","children","Login","email","setEmail","password","setPassword","errMsg","setErrMsg","useContext","Card","style","marginTop","width","marginRight","marginLeft","Form","id","onSubmit","e","preventDefault","post","users","status","localStorage","setItem","token","log","history","push","FormGroup","FormControl","type","name","placeholder","onChange","target","required","Button","variant","size","MenuBar","getItem","activeTab","Navbar","bg","fixed","Brand","href","Nav","className","defaultActiveKey","Item","Link","onClick","clear","ProductContext","ProductProvider","product","setProduct","headers","to","pathname","state","from","location","AddProduct","setName","price","setPrice","description","setDescription","msg","setMsg","min","step","Dashboard","Products","editing","SetEditing","Container","fluid","toString","Table","striped","hover","map","_id","productName","ProductPrice","ProductDescription","ProductCreatedDate","key","contenteditable","onInput","innerText","format","pID","isNaN","alert","patch","delete","CustomerContext","CustomerProvider","customer","setCustomer","Customers","approve","setApprove","address","approved","checked","customerid","ErrorPage","ProtectedRoute","auth","Component","component","rest","render","App","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ff3d8cd6.chunk.js","sourcesContent":["import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nexport const UserContext = createContext();\n\nexport const UserProvider = props => {\n      const [users, setUsers] = useState([]);\n      const [isLoggedIn, setIsLoggedIn] = useState(false);\n      const [isAuth, setIsAuth] = useState(true);\n\n\n    //fetch products infromation from the database\n   const getUsers = () => {\n        axios.get('/api/user')\n             .then(res => {\n                setUsers(res.data)\n             }).catch(err =>{ console.error(err);\n        })\n    }\n    useEffect(() => {\n        getUsers();\n    });\n    \n   return (\n       <UserContext.Provider value={[isAuth, setIsAuth] }>\n           {props.children}\n        </UserContext.Provider>  \n   )\n}\n export default UserProvider;\n","import React, {useState,useContext} from 'react'\nimport { Button,Card,FormControl,FormGroup,Form} from 'react-bootstrap';\nimport {UserContext} from '../context/UsersContext'\n\nimport axios from 'axios'\n const Login = (props) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errMsg, setErrMsg] = useState('')\n    const [isAuth, setIsAuth] = useContext(UserContext)\n    \n    //handle when login is clicked\n    const onLogin = (e) => {\n        e.preventDefault();\n        axios.post('/api/authUsers',{email, password})\n            .then(res => { \n               if(res.data.users){\n                    setIsAuth(res.data.users.status)\n                    localStorage.setItem('authToken', res.data.token)\n                    localStorage.setItem('isAuth', res.data.users.status)\n                    console.log(res.data.token)\n                    props.history.push('/dashboard')\n                }\n                setErrMsg(\"Invalid information Entered\");\n           // setUsers(res.data)\n            }).catch(err =>{  setErrMsg(\"Invalid information Entered\");;\n        })\n    }\n\n    return (\n        <div>\n            <Card style={{ marginTop:'14%', width: '50%', marginRight:'15%',  marginLeft:'25%'  }}>\n                <Form id=\"FormCSS\" onSubmit={onLogin}> \n                    <h2>Login</h2>\n                    <FormGroup>\n                        <FormControl type=\"email\" name=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\n                    </FormGroup>\n                    <p>{errMsg}</p>\n                    <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\" >\n                        Login\n                    </Button>\n                </Form>\n                {/* { !isLoggedIn ? null : <Redirect to=\"/dashboard\" /> } */}\n            </Card>\n        </div>\n    )\n}\n\nexport default Login;","import React,{useState} from 'react'\nimport {Navbar, Nav} from 'react-bootstrap'\n\nexport const MenuBar = () => {\n    const isAuth = localStorage.getItem('authToken');\n    const [activeTab, setActiveTab] = useState('/dashboard');\n \n    return isAuth!=null ? (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Navbar.Brand href=\"/dashboard\">Tazwiz Inc</Navbar.Brand>\n                <Nav className=\"mr-auto\" variant=\"\" defaultActiveKey={activeTab}>\n                    <Nav.Item>\n                        <Nav.Link href=\"/dashboard\">Home</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/products\">Products</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/customers\" >Customers</Nav.Link>\n                    </Nav.Item>\n                     <Nav.Link href=\"/logout\" onClick={()=> localStorage.clear()}>LogOut</Nav.Link>\n                </Nav>\n            </Navbar>\n        </div>\n    ) :(\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Navbar.Brand href=\"/\">Tazwiz Inc</Navbar.Brand>\n            </Navbar>\n        </div>\n    )\n}\nexport default MenuBar;","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nimport {Redirect} from 'react-router-dom'\nexport const ProductContext = createContext();\n\nexport const ProductProvider = props => {\n      const [product, setProduct] = useState([]);\n    //fetch products infromation from the database\n   const getProducts = () => {\n        axios.get('/api/products',{headers: {'authtoken': localStorage.getItem('authToken')}})\n             .then(res => {\n                setProduct(res.data)\n             }).catch(err =>{ \n                    return <Redirect to={\n                        {\n                            pathname:\"/\",\n                            state:\n                            {\n                                from: props.location\n                            }\n                        }\n                    }/>\n                 console.error(err.status);\n             })\n    }\n\n    useEffect(() => {\n        getProducts();\n    });\n\n   return (\n        <ProductContext.Provider value={[product,setProduct]}>\n            {props.children}\n        </ProductContext.Provider>  \n   )\n}\n export default  ProductProvider;\n","import React, { useState, useContext } from 'react';\nimport {ProductContext} from '../context/ProductContext'\nimport { Button} from 'react-bootstrap';\nimport axios from 'axios'\n\nconst AddProduct = () => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [msg, setMsg] = useState('');\n    \n    //when add is clicked\n    const onSubmit = (e) => {\n        e.preventDefault();\n        //add the product to the database\n        axios.post('/api/products', {name,price,description}) \n            .then(res => {\n               console.log(res)\n               setMsg('Product add successfully!');\n            })\n            .catch(err =>{ \n                setMsg('Unable to add product');\n                console.error(err);\n        })\n    }\n    return (\n            <form onSubmit={onSubmit} className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"name\" placeholder=\"Enter Product Name\" name=\"name\"  value={name} onChange={(e) => setName(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"number\" min=\"1\"className=\"form-control mb-2 mr-sm-2\" step=\".01\" id=\"price\" placeholder=\"Enter Product Price\" name=\"price\" value={price} onChange={(e) => setPrice(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Description\" name=\"description\"  value={description} onChange={(e) => setDescription(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\">\n                            Add\n                        </Button>\n                    </div>\n                </div>\n                <div>{msg}</div>\n            </form>\n            \n\n        )\n}\n\nexport default AddProduct\n","import React from 'react';\nimport MenuBar from '../components/MenuBar';\nimport AddProduct from '../components/AddProduct';\n//dashbaord page\nconst Dashboard = () => {\n    return (\n        <div className=\"container\" id=\"dashboard\">\n             <MenuBar />\n             <h2> Add Product </h2>\n            <AddProduct />\n            \n        </div>\n    )\n}\n\nexport default Dashboard\n","import React, { useContext, useState } from 'react'\nimport {ProductContext} from '../context/ProductContext'\nimport {Container,Button, Table} from 'react-bootstrap'\nimport AddProduct from '../components/AddProduct';\nimport MenuBar from '../components/MenuBar';\nimport Moment from 'react-moment';\nimport axios from 'axios'\nconst Products = () => {\n   const [productInfo, setProductInfo] = useState({})\n   const [name, setName] = useState('');\n   const [price, setPrice] = useState('');  \n   const [editing, SetEditing] = useState(false)\n   const [product, setProduct] = useContext(ProductContext)\n   const [getPrice, SetGetPrice] = useContext(ProductContext)\n\n    //delete product when remove is clicked\n   const deleteProduct = (id) => {\n       axios.delete('/api/products/'+id)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n\n    //save the data once the save button is clicked\n    const SaveProduct = (pID) => {\n        SetEditing(false);\n        if(price != '' ){\n            if(!isNaN(price)){\n                axios.patch('/api/products/'+ pID, {ProductPrice: price})\n                .then(res => { \n                    console.log(res)\n                })\n                .catch(err => console.log(err))\n            }else{\n                alert(\"Please Enter a Number\")\n            }\n         }else{\n            return;\n         }\n        }\n   \n     //sets edit mode\n    const EditProduct = (id) => {\n        SetEditing( editing => !editing);\n     }\n\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n             <MenuBar />\n             <div>\n                 <h2 className=\"pb-2\">Add Product</h2>\n                <AddProduct />\n             </div>\n             <h2 className=\"pt-5\">Products</h2>\n             <p>Edit mode {editing.toString()} </p>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>ProductName</th>\n                        <th>ProductPrice (CAD)</th>\n                        <th>ProductDescription</th>\n                        <th>ProductCreatedDate</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                {product.map(({_id, productName, ProductPrice, ProductDescription, ProductCreatedDate}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td contenteditable={editing} onInput={(e) => setName(e.target.innerText)} >\n                                {productName}\n                            </td>\n                            <td contenteditable=\"true\" type={\"number\"} onInput={(e) => setPrice(e.target.innerText)}>\n                                {/* {editing ?  <input value ={ProductPrice} type={\"number\"} onChange={(e) => setPrice(e.target.price)}/> : ProductPrice } */}\n                                    {/* <input value ={price} type={\"number\"} onChange={(e) => setPrice(e.target.price)}/> */}\n                                {ProductPrice}\n                            </td>\n                            <td>\n                                {ProductDescription}\n                            </td>\n                            <td>\n                                    <Moment format=\"YYYY-MM-DD\">{ProductCreatedDate}</Moment> \n                            </td>\n                            <td>\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => editing ? SaveProduct(_id): EditProduct(_id)}>\n                                   { editing === false ?  'Edit Price': 'Save' }\n                                </Button>\n                            </td>\n                            <td>\n                                <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteProduct(_id)}>\n                                    Remove\n                                </Button>\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n  \n    )\n}\n\nexport default Products;\n","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nexport const CustomerContext = createContext();\n\nexport const CustomerProvider = props => {\n   const [customer, setCustomer] = useState([]);\n\n   const getCustomers = () => {\n      axios.get('/api/customers',{headers: {'authtoken': localStorage.getItem('authToken')}})\n           .then(res => {\n               setCustomer(res.data)\n         }).catch(err =>{ \n            //console.error(err);\n      })\n    }\n    \n    useEffect(() => {\n      getCustomers();\n    });\n    \n   return (\n       <CustomerContext.Provider value={[customer,setCustomer]}>\n           {props.children}\n        </CustomerContext.Provider>  \n   )\n}\n export default  CustomerProvider;","import React, {useContext, useState } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Table} from 'react-bootstrap'\nimport MenuBar from '../components/MenuBar';\nimport axios from 'axios'\n\n//customers components  \nconst Customers = (props) => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n    const [approve, setApprove] = useState(false)\n\n     //when the check box is toggled\n    const handleCheckboxChange = (customerid) =>{\n        setApprove(!approve)\n        axios.patch('/api/customers/'+ customerid, {approved: approve})\n             .then(res => { console.log(res) })\n             .catch(err => console.log(err))\n    }\n\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n            <MenuBar/>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>UUID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Address</th>\n                        <th>Approved</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                {customer.map(({_id, name, email, address, approved}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {_id}\n                            </td>\n                            <td>\n                                {name}\n                            </td>\n                            <td>\n                                {email}\n                            </td>\n                            <td>\n                                {address}\n                            </td>\n                            <td>\n                                {approved.toString()}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\"  checked={approved} onClick={() => setApprove(!approved)} onChange={() => handleCheckboxChange(_id)} />\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n    )\n}\nexport default Customers;\n","import React from 'react'\n\nconst ErrorPage = () => {\n    return (\n        <div>\n            <h1>PAGE NOT FOUND</h1>\n        </div>\n    )\n}\nexport default  ErrorPage","import React from 'react';\nimport { Route ,Redirect} from 'react-router-dom';\n\nconst ProtectedRoute = ({ auth,component: Component, ...rest }) => {\n\n    const token = localStorage.getItem('authToken')\n        return (\n          <Route {...rest} render={\n            props => {\n              if (token != null) {\n                return <Component {...rest} {...props} />\n              } else {\n                return <Redirect to={\n                  {\n                    pathname: '/',\n                    state: {\n                      from: props.location\n                    }\n                  }\n                } />\n              }\n            }\n          } />\n        )\n      }\n\nexport default ProtectedRoute;\n","import React, {useEffect} from 'react'\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Login from './pages/Login';\nimport MenuBar from './components/MenuBar';\nimport {ProductProvider} from './context/ProductContext'\nimport Dashboard from './pages/Dashboard';\nimport Products from './pages/Products';\nimport Customers from './pages/Customers';\nimport {BrowserRouter, Switch,Route} from 'react-router-dom'\nimport { CustomerProvider } from './context/CustomerContext';\nimport {UserProvider} from './context/UsersContext';\nimport ErrorPage from './components/ErrorPage'\nimport ProtectedRoute from './components/ProtectedRoute';\nimport SignUp from './pages/SignUp';\nfunction App() {\n  const token = localStorage.getItem('authToken');\n  \n  return (\n    <BrowserRouter>\n      < UserProvider>\n          <CustomerProvider>\n            <ProductProvider>\n              <div className=\"App\">\n                  <MenuBar />\n                  <Switch>\n                    <Route path=\"/\" exact={true} component={Login}/>\n                    <Route path=\"/login\" exact={true} component={Login}/>\n                    <Route path=\"/logout\" exact={true} component={Login}/>\n                    <ProtectedRoute exact path=\"/dashboard\" auth={token !== null}  component={Dashboard}/>\n                    <ProtectedRoute exact path=\"/products\" component={Products}/>\n                    <ProtectedRoute exact path=\"/customers\" component={Customers}/>\n                    <Route  path=\"*\"component={ErrorPage}/>\n                  </Switch>\n              </div>\n            </ProductProvider>\n          </CustomerProvider>\n        </ UserProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}