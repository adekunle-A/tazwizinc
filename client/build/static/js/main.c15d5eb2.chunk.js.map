{"version":3,"sources":["components/Login.js","components/MenuBar.js","context/ProductContext.js","components/Products.js","components/AddProduct.js","context/CustomerContext.js","components/Customers.js","pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Component","MenuBar","Navbar","bg","variant","fixed","Brand","href","Nav","className","Link","ProductContext","createContext","ProductProvider","props","useState","id","uuid","name","price","description","product","setProduct","Provider","value","children","Products","useContext","Container","fluid","Table","striped","hover","map","key","Button","size","onClick","console","log","PrevProduct","filter","updateProduct","deleteProduct","AddProduct","setName","setPrice","setDescription","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","CustomerContext","CustomerProvider","email","address","approved","customer","setCustomer","Customers","checked","docid","forEach","element","Dashboard","state","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gUAGoBA,Y,eCDL,SAASC,IACpB,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,OACnC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SAAnB,cACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACf,kBAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,SAAf,YACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,cAAf,gB,mBCNHI,EAAiBC,0BACjBC,EAAkB,SAAAC,GAAU,IAAD,EACPC,mBAC1B,CACI,CAACC,GAAIC,cAAQC,KAAM,QAASC,MAAO,EAAGC,YAAa,iBACnD,CAACJ,GAAIC,cAAQC,KAAM,OAAQC,MAAO,GAAIC,YAAa,gBACnD,CAACJ,GAAIC,cAAQC,KAAM,OAAQC,MAAO,EAAGC,YAAa,gBAClD,CAACJ,GAAIC,cAAQC,KAAM,OAAQC,MAAO,EAAGC,YAAa,kBANrB,mBAC9BC,EAD8B,KACrBC,EADqB,KASrC,OACI,kBAACX,EAAeY,SAAhB,CAAyBC,MAAO,CAACH,EAAQC,IACpCR,EAAMW,W,wBC8CHC,EAzDE,WAAO,IAAD,EAEWC,qBAAWhB,GAFtB,mBAEZU,EAFY,KAEHC,EAFG,KAmBnB,OACI,6BACI,kBAACM,EAAA,EAAD,CAAWnB,UAAU,MAAMoB,OAAK,GAC3B,kBAACC,EAAA,EAAD,CAAOA,OAAK,EAACC,SAAO,EAACC,OAAK,EAACvB,UAAU,QACjCY,EAAQY,KAAI,gBAAEjB,EAAF,EAAEA,GAAIE,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,YAAnB,OACT,2BAAOc,IAAKlB,GACR,4BACI,4BAEKE,GAEL,4BAEKC,GAEL,4BAEKC,GAEL,4BACI,kBAACe,EAAA,EAAD,CAAQ/B,QAAQ,kBAAkBgC,KAAK,KAAKC,QAAS,kBA3B/D,SAACrB,GACnBsB,QAAQC,IAAIvB,GAIXM,GAAW,SAAAkB,GAAW,mBAAQA,EAAYC,QAAO,SAAApB,GAAO,OAAIA,EAAQL,KAAOA,SAsBW0B,CAAc1B,KAAzE,SAIJ,4BACI,kBAACmB,EAAA,EAAD,CAAQ/B,QAAQ,iBAAiBgC,KAAK,KAAKC,QAAS,kBAvC/D,SAACrB,GACnBsB,QAAQC,IAAIvB,GAIXM,GAAW,SAAAkB,GAAW,mBAAQA,EAAYC,QAAO,SAAApB,GAAO,OAAIA,EAAQL,KAAOA,SAkCW2B,CAAc3B,KAAxE,oBCRrB4B,EAnCI,WAAO,IAAD,EAEG7B,mBAAS,IAFZ,mBAEdG,EAFc,KAER2B,EAFQ,OAGK9B,mBAAS,IAHd,mBAGdI,EAHc,KAGP2B,EAHO,OAIiB/B,mBAAS,IAJ1B,mBAIdK,EAJc,KAID2B,EAJC,OAKSpB,qBAAWhB,GALpB,mBAKLW,GALK,WAYrB,OACQ,0BAAM0B,SALG,SAACC,GACdA,EAAEC,iBACF5B,GAAW,SAAAkB,GAAW,4BAAQA,GAAR,CAAqB,CAACtB,OAAKC,QAAMC,qBAGzBX,UAAU,aAChC,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,2BAAO0C,KAAK,OAAO1C,UAAU,4BAA4BO,GAAG,OAAOoC,YAAY,qBAAqBlC,KAAK,OAAQM,MAAON,EAAMmC,SAAU,SAACJ,GAAD,OAAOJ,EAAQI,EAAEK,OAAO9B,QAAQ+B,UAAQ,KAEpL,yBAAK9C,UAAU,UACX,2BAAO0C,KAAK,OAAO1C,UAAU,4BAA4BO,GAAG,QAAQoC,YAAY,sBAAsBlC,KAAK,QAAQM,MAAOL,EAAOkC,SAAU,SAACJ,GAAD,OAAOH,EAASG,EAAEK,OAAO9B,QAAQ+B,UAAQ,KAExL,yBAAK9C,UAAU,UACX,2BAAO0C,KAAK,OAAO1C,UAAU,4BAA4BO,GAAG,QAAQoC,YAAY,4BAA4BlC,KAAK,cAAeM,MAAOJ,EAAaiC,SAAU,SAACJ,GAAD,OAAOF,EAAeE,EAAEK,OAAO9B,QAAQ+B,UAAQ,KAEjN,yBAAK9C,UAAU,UACX,kBAAC0B,EAAA,EAAD,CAAQ/B,QAAQ,kBAAkBgC,KAAK,KAAKe,KAAK,UAAjD,WC3BXK,EAAkB5C,0BAClB6C,EAAmB,SAAA3C,GAAU,IAAD,EACNC,mBAC5B,CACI,CAACC,GAAIC,cAAQC,KAAM,MAAOwC,MAAO,gBAAiBC,QAAS,gBAAiBC,UAAS,GACrF,CAAC5C,GAAIC,cAAQC,KAAM,QAASwC,MAAO,kBAAmBC,QAAS,gBAAiBC,UAAS,GACzF,CAAC5C,GAAIC,cAAQC,KAAM,SAAUwC,MAAM,gBAAiBC,QAAS,gBAAiBC,UAAS,GACvF,CAAC5C,GAAIC,cAAQC,KAAM,QAASwC,MAAO,kBAAmBC,QAAS,gBAAiBC,UAAS,GACzF,CAAC5C,GAAIC,cAAQC,KAAM,OAAQwC,MAAO,iBAAkBC,QAAS,gBAAiBC,UAAS,KAPzD,mBAC/BC,EAD+B,KACrBC,EADqB,KAUtC,OACI,kBAACN,EAAgBjC,SAAjB,CAA0BC,MAAO,CAACqC,EAASC,IACtChD,EAAMW,WC+CHsC,EA1DG,WAAO,IAAD,EACYpC,qBAAW6B,GADvB,mBACbK,EADa,UAyBpB,OACI,6BACI,kBAACjC,EAAA,EAAD,CAAWnB,UAAU,MAAMoB,OAAK,GAC3B,kBAACC,EAAA,EAAD,CAAOA,OAAK,EAACC,SAAO,EAACC,OAAK,EAACvB,UAAU,QACjCoD,EAAS5B,KAAI,gBAAEjB,EAAF,EAAEA,GAAIE,EAAN,EAAMA,KAAMwC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,SAA5B,OACV,2BAAO1B,IAAKlB,GACR,4BACI,4BAEKE,GAEL,4BACKwC,GAEL,4BACKC,GAEL,4BACKC,GAEL,4BACI,2BAAOT,KAAK,WAAYa,QAASJ,EAAUP,SAAU,kBAlCvDY,EAkCkFjD,OAjC5G6C,EAASK,SAAQ,SAAAC,GACVA,EAAQnD,KAAOiD,IACd3B,QAAQC,IAAI4B,EAAQP,UACpBtB,QAAQC,IAAI,CAACsB,QAJI,IAACI,eCInBG,E,kDAhBX,WAAYtD,GAAO,IAAD,8BACd,cAAMA,IACDuD,MAAQ,GAFC,E,qDAMd,OACI,yBAAK5D,UAAU,YAAYO,GAAG,aAC1B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAXQhB,aCkBTsE,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACI,yBAAK7D,UAAU,OACX,kBAACR,EAAD,MAEA,kBAAC,EAAD,UCHMsE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlD,QAAQkD,MAAMA,EAAMC,c","file":"static/js/main.c15d5eb2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button,Card,FormControl,FormGroup,Form} from 'react-bootstrap';\n\nclass Login extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            email: '',\n            password:''\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Card style={{ marginTop:'14%', width: '50%', marginRight:'15%',  marginLeft:'25%'  }}>\n                    <Form id=\"FormCSS\"> \n                        <label>Login Form</label>\n                        <FormGroup>\n                            <FormControl type=\"email\" name=\"email\" placeholder=\"Enter email\" required/>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" required/>\n                        </FormGroup>\n\n                        <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\">\n                            Login\n                        </Button>\n\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React from 'react'\nimport {Navbar, Nav} from 'react-bootstrap'\nexport default function MenuBar() {\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Navbar.Brand href=\"#home\">Tazwiz Inc</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Products</Nav.Link>\n                <Nav.Link href=\"#customers\">Customers</Nav.Link>\n\n                </Nav>\n            </Navbar>\n        </div>\n    )\n}\n","import React, {useState, createContext} from 'react'\nimport {v4 as uuid} from \"uuid\"; \n\nexport const ProductContext = createContext();\nexport const ProductProvider = props => {\n   const [product, setProduct] = useState(\n       [\n           {id: uuid(), name: 'Water', price: 7, description: \"water descrip\"},\n           {id: uuid(), name: 'Milk', price: 17, description: \"milk descrip\"},\n           {id: uuid(), name: 'Soap', price: 6, description: \"soap descrip\"},\n           {id: uuid(), name: 'Rice', price: 3, description: \"rice descrip\"},\n       \n      ]);\n   return (\n       <ProductContext.Provider value={[product,setProduct]}>\n           {props.children}\n        </ProductContext.Provider>  \n   )\n}\n export default  ProductProvider;\n","import React, { useContext } from 'react'\nimport {ProductContext} from '../context/ProductContext'\nimport {Container,Button, Table} from 'react-bootstrap'\n\nconst Products = () => {\n\n    const [product, setProduct] = useContext(ProductContext)\n\n\n   const deleteProduct = (id) => {\n       console.log(id)\n        // axios.delete('')\n        //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n        //      .catch(err => console.log(err))\n        setProduct(PrevProduct => [...PrevProduct.filter(product => product.id !== id)]);\n    }\n    const updateProduct = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         setProduct(PrevProduct => [...PrevProduct.filter(product => product.id !== id)]);\n     }\n    return (\n        <div>\n            <Container className=\"p-0\" fluid>\n                 <Table Table striped hover className=\"mb-0\">\n                    {product.map(({id, name, price, description}) => (\n                        <tbody key={id}>\n                            <tr> \n                                <td>\n                                    {/* <input value={name} onChange={(e) => setName(e.target.value)}/> */}\n                                    {name}\n                                </td>\n                                <td>\n                                     {/* <input value ={price} onChange={(e) => setPricee(e.target.price)}/> */}\n                                    {price}\n                                </td>\n                                <td>\n                                     {/* <input value ={description}  onChange={(e) => setDecription(e.target.value)} /> */}\n                                    {description}\n                                </td>\n                                <td>\n                                    <Button variant=\"outline-primary\" size=\"sm\" onClick={() => updateProduct(id)}>\n                                        Edit\n                                    </Button>\n                                </td>\n                                <td>\n                                    <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteProduct(id)}>\n                                        Remove\n                                    </Button>\n                                </td>\n                            </tr>\n                        </tbody>                                \n                    ))}\n                  </Table>\n            </Container>\n        </div>\n    )\n}\n\nexport default Products;\n","import React, { useState, useContext } from 'react';\nimport {ProductContext} from '../context/ProductContext'\nimport { Button} from 'react-bootstrap';\n\n\nconst AddProduct = () => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [product, setProduct] = useContext(ProductContext); \n    \n    //when add is clicked\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setProduct(PrevProduct => [...PrevProduct, {name,price,description}]) //create a copy of the array and add new data to it \n    }\n    return (\n            <form onSubmit={onSubmit} className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"name\" placeholder=\"Enter Product Name\" name=\"name\"  value={name} onChange={(e) => setName(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Price\" name=\"price\" value={price} onChange={(e) => setPrice(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Description\" name=\"description\"  value={description} onChange={(e) => setDescription(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\">\n                            Add\n                        </Button>\n                    </div>\n                </div>\n            </form>\n\n        )\n}\n\nexport default AddProduct\n","import React, {useState, createContext} from 'react'\nimport {v4 as uuid} from \"uuid\"; \n\nexport const CustomerContext = createContext();\nexport const CustomerProvider = props => {\n   const [customer, setCustomer] = useState(\n       [\n           {id: uuid(), name: 'Bob', email: \"abc@yahoo.com\", address: \"water descrip\", approved:false},\n           {id: uuid(), name: 'Smith', email: \"abc3f@yahoo.com\", address: \"water descrip\", approved:true},\n           {id: uuid(), name: 'Stella', email:\"abc@yahoo.com\", address: \"water descrip\", approved:false},\n           {id: uuid(), name: 'Steph', email: \"abhhc@yahoo.com\", address: \"water descrip\", approved:false},\n           {id: uuid(), name: 'Wale', email: \"test@yahoo.com\", address: \"water descrip\", approved:false},\n       \n      ]);\n   return (\n       <CustomerContext.Provider value={[customer,setCustomer]}>\n           {props.children}\n        </CustomerContext.Provider>  \n   )\n}\n export default  CustomerProvider;","import React, {useState,useContext } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Button, Table} from 'react-bootstrap'\nimport { Prev } from 'react-bootstrap/PageItem';\n\nconst Customers = () => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n\n    const updateCustomer = (id) => {\n        console.log(id)\n         // axios.patch('')\n         //      .then(res => this.setState( {products: this.state.products.filter(product => product.id !==id )}) )\n         //      .catch(err => console.log(err))\n         \n     }\n     \n     //when the check box is toggled\n    const handleCheckboxChange = (docid) =>{\n        customer.forEach(element => {\n            if(element.id === docid){\n                console.log(element.approved);\n                console.log([customer])\n            }\n           \n        });\n        //setCustomer(PrevCustomer => [...PrevProduct.filter(product => product.id === id)])\n        //setCustomer(PrevCustomer => [ customer[0].approved = !approved])\n        //setCustomer(PrevProduct => [customer[0].approved = true,{}...PrevProduct.filter(product => product.id === id)]);\n        \n     }\n    return (\n        <div>\n            <Container className=\"p-0\" fluid>\n                 <Table Table striped hover className=\"mb-0\">\n                    {customer.map(({id, name, email, address, approved}) => (\n                        <tbody key={id}>\n                            <tr> \n                                <td>\n                                \n                                    {name}\n                                </td>\n                                <td>\n                                    {email}\n                                </td>\n                                <td>\n                                    {address}\n                                </td>\n                                <td>\n                                    {approved}\n                                </td>\n                                <td>\n                                    <input type=\"checkbox\"  checked={approved} onChange={() => handleCheckboxChange(id)} />\n                                \n                                </td>\n                            </tr>\n                        </tbody>                                \n                    ))}\n                  </Table>\n            </Container>\n        </div>\n    )\n}\n\nexport default Customers;\n","import React, { Component } from 'react';\nimport Products from '../components/Products'\nimport AddProduct from '../components/AddProduct';\nimport Customers from '../components/Customers';\nclass Dashboard extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <div className=\"container\" id=\"dashboard\">\n                <AddProduct />\n                <Products />\n                <Customers />\n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Login from './components/Login';\nimport MenuBar from './components/MenuBar';\nimport {ProductProvider} from './context/ProductContext'\nimport Dashboard from './pages/Dashboard';\nimport { CustomerProvider } from './context/CustomerContext';\nfunction App() {\n  return (\n    <CustomerProvider>\n      <ProductProvider>\n          <div className=\"App\">\n              <MenuBar />\n              {/* <Login /> */}\n              <Dashboard />\n          </div>\n      </ProductProvider>\n    </CustomerProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}