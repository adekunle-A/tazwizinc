{"version":3,"sources":["context/UsersContext.js","pages/Login.js","components/MenuBar.js","context/ProductContext.js","components/AddProduct.js","pages/Dashboard.js","pages/Products.js","context/CustomerContext.js","pages/Customers.js","components/ErrorPage.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","setUsers","isAuth","setIsAuth","useEffect","axios","get","then","res","data","console","log","catch","err","error","Provider","value","children","Login","email","setEmail","password","setPassword","errMsg","setErrMsg","useContext","Card","style","marginTop","width","marginRight","marginLeft","Form","id","onSubmit","e","preventDefault","post","users","status","localStorage","setItem","token","history","push","FormGroup","FormControl","type","name","placeholder","onChange","target","required","Button","variant","size","MenuBar","getItem","Navbar","bg","fixed","Brand","href","Nav","className","defaultActiveKey","Item","Link","onClick","clear","ProductContext","ProductProvider","product","setProduct","headers","to","pathname","state","from","location","AddProduct","setName","price","setPrice","description","setDescription","msg","setMsg","min","step","Dashboard","Products","editing","SetEditing","Container","fluid","toString","Table","striped","hover","map","_id","productName","ProductPrice","ProductDescription","ProductCreatedDate","key","contenteditable","onInput","innerText","format","pID","isNaN","alert","patch","delete","CustomerContext","CustomerProvider","customer","setCustomer","Customers","approve","setApprove","address","approved","checked","customerid","ErrorPage","ProtectedRoute","auth","Component","component","rest","render","App","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cf457230.chunk.js","sourcesContent":["import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nexport const UserContext = createContext();\n\nexport const UserProvider = props => {\n      const [users, setUsers] = useState([]);\n      const [isLoggedIn, setIsLoggedIn] = useState(false);\n      const [isAuth, setIsAuth] = useState(true);\n\n\n    //fetch products infromation from the database\n   const getUsers = () => {\n        axios.get('/api/user')\n             .then(res => {\n                setUsers(res.data)\n                console.log(res)\n             }).catch(err =>{ console.error(err);\n        })\n    }\n    useEffect(() => {\n        getUsers();\n    });\n    \n   return (\n       <UserContext.Provider value={[isAuth, setIsAuth] }>\n           {props.children}\n        </UserContext.Provider>  \n   )\n}\n export default UserProvider;\n","import React, {useState,useContext} from 'react'\nimport { Button,Card,FormControl,FormGroup,Form} from 'react-bootstrap';\nimport {UserContext} from '../context/UsersContext'\n\nimport axios from 'axios'\n const Login = (props) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errMsg, setErrMsg] = useState('')\n    const [isAuth, setIsAuth] = useContext(UserContext)\n    \n    //handle when login is clicked\n    const onLogin = (e) => {\n        e.preventDefault();\n        axios.post('/api/authUsers',{email, password})\n            .then(res => { \n               if(res.data.users){\n                    setIsAuth(res.data.users.status)\n                    localStorage.setItem('authToken', res.data.token)\n                    localStorage.setItem('isAuth', res.data.users.status)\n                    console.log(res.data.token)\n                    props.history.push('/dashboard')\n                }\n                setErrMsg(\"Invalid information Entered\");\n           // setUsers(res.data)\n            }).catch(err =>{  setErrMsg(\"Invalid information Entered\");;\n        })\n    }\n\n    return (\n        <div>\n            <Card style={{ marginTop:'14%', width: '50%', marginRight:'15%',  marginLeft:'25%'  }}>\n                <Form id=\"FormCSS\" onSubmit={onLogin}> \n                    <label>Login Form</label>\n                    <FormGroup>\n                        <FormControl type=\"email\" name=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <FormControl type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\n                    </FormGroup>\n                    <p>{errMsg}</p>\n                    <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\" >\n                        Login\n                    </Button>\n\n                </Form>\n                {/* { !isLoggedIn ? null : <Redirect to=\"/dashboard\" /> } */}\n            </Card>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react'\nimport {Navbar, Nav} from 'react-bootstrap'\n\nexport const MenuBar = () => {\n    const isAuth = localStorage.getItem('authToken');\n \n    return isAuth!=null ? (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n                <Navbar.Brand href=\"/dashboard\">Tazwiz Inc</Navbar.Brand>\n                <Nav className=\"mr-auto\" variant=\"\" defaultActiveKey=\"/dashboard\">\n                    <Nav.Item>\n                        <Nav.Link href=\"/dashboard\">Home</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/products\">Products</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/customers\" >Customers</Nav.Link>\n                    </Nav.Item>\n                     <Nav.Link href=\"/logout\" onClick={()=> localStorage.clear()}>LogOut</Nav.Link>\n                </Nav>\n            </Navbar>\n        </div>\n    ) :(\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Navbar.Brand href=\"/\">Tazwiz Inc</Navbar.Brand>\n            </Navbar>\n        </div>\n    )\n}\nexport default MenuBar;","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nimport {Redirect} from 'react-router-dom'\nexport const ProductContext = createContext();\n\nexport const ProductProvider = props => {\n      const [product, setProduct] = useState([]);\n    //fetch products infromation from the database\n   const getProducts = () => {\n        axios.get('/api/products',{headers: {'authtoken': localStorage.getItem('authToken')}})\n             .then(res => {\n                setProduct(res.data)\n             }).catch(err =>{ \n                    return <Redirect to={\n                        {\n                            pathname:\"/\",\n                            state:\n                            {\n                                from: props.location\n                            }\n                        }\n                    }/>\n                 console.error(err.status);\n             })\n    }\n\n    useEffect(() => {\n        getProducts();\n    });\n\n   return (\n        <ProductContext.Provider value={[product,setProduct]}>\n            {props.children}\n        </ProductContext.Provider>  \n   )\n}\n export default  ProductProvider;\n","import React, { useState, useContext } from 'react';\nimport {ProductContext} from '../context/ProductContext'\nimport { Button} from 'react-bootstrap';\nimport axios from 'axios'\n\nconst AddProduct = () => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [msg, setMsg] = useState('');\n    \n    //when add is clicked\n    const onSubmit = (e) => {\n        e.preventDefault();\n        //add the product to the database\n        axios.post('/api/products', {name,price,description}) \n            .then(res => {\n               console.log(res)\n               setMsg('Product add successfully!');\n            })\n            .catch(err =>{ \n                setMsg('Unable to add product');\n                console.error(err);\n        })\n    }\n    return (\n            <form onSubmit={onSubmit} className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"name\" placeholder=\"Enter Product Name\" name=\"name\"  value={name} onChange={(e) => setName(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"number\" min=\"1\"className=\"form-control mb-2 mr-sm-2\" step=\".01\" id=\"price\" placeholder=\"Enter Product Price\" name=\"price\" value={price} onChange={(e) => setPrice(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <input type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"price\" placeholder=\"Enter Product Description\" name=\"description\"  value={description} onChange={(e) => setDescription(e.target.value)} required/>\n                    </div>\n                    <div className=\"col-sm\">\n                        <Button variant=\"outline-primary\" size=\"lg\" type=\"submit\">\n                            Add\n                        </Button>\n                    </div>\n                </div>\n                <div>{msg}</div>\n            </form>\n            \n\n        )\n}\n\nexport default AddProduct\n","import React from 'react';\nimport MenuBar from '../components/MenuBar';\nimport AddProduct from '../components/AddProduct';\n//dashbaord page\nconst Dashboard = () => {\n    return (\n        <div className=\"container\" id=\"dashboard\">\n             <MenuBar />\n             <h2> Add Product </h2>\n            <AddProduct />\n            \n        </div>\n    )\n}\n\nexport default Dashboard\n","import React, { useContext, useState } from 'react'\nimport {ProductContext} from '../context/ProductContext'\nimport {Container,Button, Table} from 'react-bootstrap'\nimport AddProduct from '../components/AddProduct';\nimport MenuBar from '../components/MenuBar';\nimport Moment from 'react-moment';\nimport axios from 'axios'\nconst Products = () => {\n   const [productInfo, setProductInfo] = useState({})\n   const [name, setName] = useState('');\n   const [price, setPrice] = useState('');  \n   const [editing, SetEditing] = useState(false)\n   const [product, setProduct] = useContext(ProductContext)\n   const [getPrice, SetGetPrice] = useContext(ProductContext)\n\n    //delete product when remove is clicked\n   const deleteProduct = (id) => {\n       axios.delete('/api/products/'+id)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err =>{ \n                console.error(err);\n        })\n    }\n\n    //save the data once the save button is clicked\n    const SaveProduct = (pID) => {\n        SetEditing(false);\n        if(price != '' ){\n            if(!isNaN(price)){\n                axios.patch('/api/products/'+ pID, {ProductPrice: price})\n                .then(res => { \n                    console.log(res)\n                })\n                .catch(err => console.log(err))\n            }else{\n                alert(\"Please Enter a Number\")\n            }\n         }else{\n            return;\n         }\n        }\n   \n     //sets edit mode\n    const EditProduct = (id) => {\n        SetEditing( editing => !editing);\n     }\n\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n             <MenuBar />\n             <div>\n                 <h2 className=\"pb-2\">Add Product</h2>\n                <AddProduct />\n             </div>\n             <h2 className=\"pt-5\">Products</h2>\n             <p>Edit mode {editing.toString()} </p>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>ProductName</th>\n                        <th>ProductPrice (CAD)</th>\n                        <th>ProductDescription</th>\n                        <th>ProductCreatedDate</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                {product.map(({_id, productName, ProductPrice, ProductDescription, ProductCreatedDate}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td contenteditable={editing} onInput={(e) => setName(e.target.innerText)} >\n                                {productName}\n                            </td>\n                            <td contenteditable=\"true\" type={\"number\"} onInput={(e) => setPrice(e.target.innerText)}>\n                                {/* {editing ?  <input value ={ProductPrice} type={\"number\"} onChange={(e) => setPrice(e.target.price)}/> : ProductPrice } */}\n                                    {/* <input value ={price} type={\"number\"} onChange={(e) => setPrice(e.target.price)}/> */}\n                                {ProductPrice}\n                            </td>\n                            <td>\n                                {ProductDescription}\n                            </td>\n                            <td>\n                                    <Moment format=\"YYYY-MM-DD\">{ProductCreatedDate}</Moment> \n                            </td>\n                            <td>\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => editing ? SaveProduct(_id): EditProduct(_id)}>\n                                   { editing === false ?  'Edit Price': 'Save' }\n                                </Button>\n                            </td>\n                            <td>\n                                <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteProduct(_id)}>\n                                    Remove\n                                </Button>\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n  \n    )\n}\n\nexport default Products;\n","import React, {useState, useEffect,createContext} from 'react'\nimport axios from 'axios'\nexport const CustomerContext = createContext();\n\nexport const CustomerProvider = props => {\n   const [customer, setCustomer] = useState([]);\n\n   const getCustomers = () => {\n      axios.get('/api/customers',{headers: {'authtoken': localStorage.getItem('authToken')}})\n           .then(res => {\n               setCustomer(res.data)\n         }).catch(err =>{ console.error(err);\n      })\n    }\n    \n    useEffect(() => {\n      getCustomers();\n    });\n    \n   return (\n       <CustomerContext.Provider value={[customer,setCustomer]}>\n           {props.children}\n        </CustomerContext.Provider>  \n   )\n}\n export default  CustomerProvider;","import React, {useContext, useState } from 'react'\nimport {CustomerContext} from '../context/CustomerContext'\nimport {Container,Table} from 'react-bootstrap'\nimport MenuBar from '../components/MenuBar';\nimport axios from 'axios'\n\n//customers components  \nconst Customers = (props) => {\n    const [customer, setCustomer] = useContext(CustomerContext)\n    const [approve, setApprove] = useState(false)\n\n     //when the check box is toggled\n    const handleCheckboxChange = (customerid) =>{\n        setApprove(!approve)\n        axios.patch('/api/customers/'+ customerid, {approved: approve})\n             .then(res => { console.log(res) })\n             .catch(err => console.log(err))\n    }\n\n    return (\n        <Container className=\"container\" id=\"dataDiv\" fluid>\n            <MenuBar/>\n            <Table Table striped hover className=\"mb-0\">\n                <thead>\n                    <tr>\n                        <th>UUID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Address</th>\n                        <th>Approved</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                {customer.map(({_id, name, email, address, approved}) => (\n                    <tbody key={_id}>\n                        <tr> \n                            <td>\n                                {_id}\n                            </td>\n                            <td>\n                                {name}\n                            </td>\n                            <td>\n                                {email}\n                            </td>\n                            <td>\n                                {address}\n                            </td>\n                            <td>\n                                {approved.toString()}\n                            </td>\n                            <td>\n                                <input type=\"checkbox\"  checked={approved} onClick={() => setApprove(!approved)} onChange={() => handleCheckboxChange(_id)} />\n                            </td>\n                        </tr>\n                    </tbody>                                \n                ))}\n            </Table>\n        </Container>\n    )\n}\nexport default Customers;\n","import React from 'react'\n\nconst ErrorPage = () => {\n    return (\n        <div>\n            <h1>PAGE NOT FOUND</h1>\n        </div>\n    )\n}\nexport default  ErrorPage","import React from 'react';\nimport { Route ,Redirect} from 'react-router-dom';\n\nconst ProtectedRoute = ({ auth,component: Component, ...rest }) => {\n\n    const token = localStorage.getItem('authToken')\n        return (\n          <Route {...rest} render={\n            props => {\n              if (token != null) {\n                return <Component {...rest} {...props} />\n              } else {\n                return <Redirect to={\n                  {\n                    pathname: '/',\n                    state: {\n                      from: props.location\n                    }\n                  }\n                } />\n              }\n            }\n          } />\n        )\n      }\n\nexport default ProtectedRoute;\n// import React, {useContext,useEffect} from 'react'\n// import { Route, Redirect } from 'react-router-dom'\n// import {UserContext} from '../context/UsersContext'\n// //Protected route\n// const  ProtectedRoute = ({component:Component, ...rest})  => {\n//     const token = localStorage.getItem('authToken')\n//     const [isLoggedIn, setIsLoggedIn] = useContext(UserContext)\n//     useEffect(() => {\n//         if(token != null ){\n//             setIsLoggedIn(true)\n//         }\n//     });\n//     return (\n//        <Route {...rest} render={(props) => localStorage.getItem('authToken') ? (\n    \n//               <Component {...props}/>\n//        ) :\n//               <Redirect to=\"/\"/>\n//         //    }else{\n//         //     console.log(props)\n//         //         return <Redirect to=\"/\"/>\n//         //    }\n//         }\n//        />\n//     )\n// }\n\n// export default ProtectedRoute\n","import React, {useEffect} from 'react'\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport Login from './pages/Login';\nimport MenuBar from './components/MenuBar';\nimport {ProductProvider} from './context/ProductContext'\nimport Dashboard from './pages/Dashboard';\nimport Products from './pages/Products';\nimport Customers from './pages/Customers';\nimport {BrowserRouter, Switch,Route} from 'react-router-dom'\nimport { CustomerProvider } from './context/CustomerContext';\nimport {UserProvider} from './context/UsersContext';\nimport ErrorPage from './components/ErrorPage'\nimport ProtectedRoute from './components/ProtectedRoute';\nfunction App() {\n  const token = localStorage.getItem('authToken');\n  \n  return (\n    <BrowserRouter>\n      < UserProvider>\n          <CustomerProvider>\n            <ProductProvider>\n              <div className=\"App\">\n                  <MenuBar />\n                  <Switch>\n                    <Route path=\"/\" exact={true} component={Login}/>\n                    <Route path=\"/logout\" exact={true} component={Login}/>\n                    <ProtectedRoute exact path=\"/dashboard\" auth={token !== null}  component={Dashboard}/>\n                    <ProtectedRoute exact path=\"/products\" component={Products}/>\n                    <ProtectedRoute exact path=\"/customers\" component={Customers}/>\n                    <Route  path=\"*\"component={ErrorPage}/>\n                  </Switch>\n              </div>\n            </ProductProvider>\n          </CustomerProvider>\n        </ UserProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}